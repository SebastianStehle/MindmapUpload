<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GP.Utils</name>
    </assembly>
    <members>
        <member name="T:GP.Utils.Annotations.AllowHtmlAttribute">
            <summary>
            Attribute to allow html.
            </summary>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedCompareAttribute">
            <summary>
            Custom validation attribute to compare two properties that provides localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedCompareAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedCompareAttribute" /> class.
            </summary>
            <param name="otherProperty">The property to compare with the current property.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedCompareAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message to display if the regular expression validation fails.
            </summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>
            The formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute">
            <summary>
            Custom validation attribute to check if a property has a valid country code.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute.UseTwoDigitCountryCode">
            <summary>
            Indicates if the country code with two digits should be used instead of the three digit country code
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute.IsValid(System.Object)">
            <summary>
            Determines whether the specified value of the object is valid.
            </summary>
            <param name="value">The value of the object to validate.</param>
            <returns>
            true if the specified value is valid; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedIsoCountryCodeAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedDisplayNameAttribute">
            <summary>
            Provides an extended display name attribute that returns the localized version of the attribute.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.GroupNameValue">
            <summary>
            Gets or sets a value that is used to group fields in the UI.
            </summary>
            <value>
            A value that is used to group fields in the UI.
            </value>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.Order">
            <summary>
            Gets or sets the order weight of the column.
            </summary>
            <value>
            The order weight of the column.
            </value>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.PromptValue">
            <summary>
            Gets or sets a value that will be used to set the watermark for prompts in the UI.
            </summary>
            <value>
            A value that will be used to display a watermark in the UI.
            </value>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.HintValue">
            <summary>
            Gets or sets a value that will be used to set the field explanation in the UI.
            </summary>
            <value>
            A value that will be used to display a field explanation in the UI.
            </value>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedDisplayNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedDisplayNameAttribute"/> class with the display name.
            </summary>
            <param name="displayName">The display name.</param>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.GroupName">
            <summary>
            Gets the localized group name for the UI.
            </summary>
            <returns>The localized group name for the UI.</returns>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.Hint">
            <summary>
            Gets the localized hint text for the UI.
            </summary>
            <returns>The localized hint text for the UI.</returns>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.Prompt">
            <summary>
            Gets the localized prompt text for the UI.
            </summary>
            <returns>The localized prompt text for the UI.</returns>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedDisplayNameAttribute.DisplayName">
            <summary>
            Gets the localized display name for the UI.
            </summary>
            <returns>The localized display name for the UI.</returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedFutureDateAttribute">
            <summary>
            Checks if the datetime value of an attribute is in the future.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedFutureDateAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedFutureDateAttribute" /> class.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedFutureDateAttribute.IsValid(System.Object)">
            <summary>
            Determines whether the specified value of the object is valid.
            </summary>
            <param name="value">The value of the object to validate.</param>
            <returns>
            true if the specified value is valid; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedFutureDateAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedMailAttribute">
            <summary>
            Custom validation attribute to check if a property is a valid mail address and to provide a localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedMailAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedMailAttribute" /> class.
            </summary>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedOptionAttribute">
            <summary>
            Validates that the value is in a given options list
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedOptionAttribute.#ctor">
            <summary>
            Creates a new instance of hte LocalizesOptionAttribute
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedOptionAttribute.#ctor(System.Object[])">
            <summary>
            Creates a new instance of hte LocalizesOptionAttribute
            </summary>
            <param name="options">The possible options</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedOptionAttribute.IsValid(System.Object)">
            <summary>
            Determines wether the content represents a phone numbers
            </summary>
            <param name="value">Value</param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedOptionAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message to display if the regular expression validation fails.
            </summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>
            The formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedPasswordCompareAttribute">
            <summary>
            Custom validation attribute to check if two properties are equals and to provide a localized validation message optimized for password field.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedPasswordCompareAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedPasswordCompareAttribute" /> class.
            </summary>
            <param name="otherProperty">The other property.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedPasswordCompareAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message based on the data field where the compare error occurred.
            </summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>
            The formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedCreditcardAttribute">
            <summary>
            Custom validation attribute to check if a property is a valid creditcarcnumber and to provide a localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedCreditcardAttribute.#ctor">
            <summary>
            Creates a new instanze of the 
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedCreditcardAttribute.IsValid(System.Object)">
            <summary>
            Determines wether the content represents a phone number.
            </summary>
            <param name="value">The value to check.</param>
            <returns>
            true if the specified object is valid; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedCreditcardAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message to display if the regular expression validation fails.
            </summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>
            The formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedPhoneNumberAttribute">
            <summary>
            Custom validation attribute to check if a property is a valid mail address and to provide a localized error message.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedPhoneNumberAttribute.RequiresLeadingZero">
            <summary>
            If true the number should begin with a leading zero
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedPhoneNumberAttribute.#ctor">
            <summary>
            Creates a new instanze of the 
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedPhoneNumberAttribute.IsValid(System.Object)">
            <summary>
            Determines wether the content represents a phone numbers
            </summary>
            <param name="value">Value</param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedPhoneNumberAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats a descriptive error message
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedRangeAttribute">
            <summary>
            Custom validation message to specify the numeric range constraints for the value of a data field and to provide a localized validation message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRangeAttribute.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRangeAttribute" /> class with the minimum and maximum value and a custom resource key.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRangeAttribute.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRangeAttribute" /> class with the minimum and maximum value.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRangeAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRangeAttribute" /> class with the minimum and maximum value.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRangeAttribute" /> class with the minimum and maximum value and a custom resource key.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRangeAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedRegexAttribute">
            <summary>
            Custom validation using regular expressions with localized error messages.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedRegexAttribute.FallbackMessage">
            <summary>
            Gets or sets the fallback message.
            </summary>
            <value>
            The fallback message.
            </value>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRegexAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRegexAttribute"/> class with the regular expression and the resource key.
            </summary>
            <param name="pattern">The regular expression pattern.</param>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRegexAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedRequiredAttribute">
            <summary>
            Custom validation attribute to specify required properties and to provide a localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRequiredAttribute" /> class.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRequiredAttribute" /> class.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedRequiredIfAttribute">
            <summary>
            Attribute that makes a property required when another property is true.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedRequiredIfAttribute.OtherProperty">
            <summary>
            Gets the name of the other property.
            </summary>
            <value>
            The other property.
            </value>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRequiredIfAttribute" /> class with the name of the other property.
            </summary>
            <param name="otherProperty">The other property.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute">
            <summary>
            Attribute that makes a property required when another property is false.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute.OtherProperty">
            <summary>
            Gets the name of the other property.
            </summary>
            <value>
            The other property.
            </value>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute" /> class with the name of the other property.
            </summary>
            <param name="otherProperty">The other property.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedRequiredIfNotAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedStringLengthAttribute">
            <summary>
            Custom validation attribute that provides localized error message for string length validation.
            </summary>
        </member>
        <member name="P:GP.Utils.Annotations.LocalizedStringLengthAttribute.AllowEmptyStrings">
            <summary>
            Gets or sets a value indicating if empty strings are allowed.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedStringLengthAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedStringLengthAttribute" /> class with the maximum and minimum length of the string.
            </summary>
            <param name="maximumLength">The maximum length.</param>
            <param name="minimumLength">The minimum length.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedStringLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedStringLengthAttribute" /> class with the maximum length of the string.
            </summary>
            <param name="maximumLength">The maximum length.</param>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedStringLengthAttribute.IsValid(System.Object)">
            <summary>
            Determines whether a specified object is valid.
            </summary>
            <param name="value">The object to validate.</param>
            <returns>
            true if the specified object is valid; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedStringLengthAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message to display if the regular expression validation fails.
            </summary>
            <param name="name">The name of the field that caused the validation failure.</param>
            <returns>
            The formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedUrlAttribute">
            <summary>
            Custom validation attribute to check if a property is a valid url and to provide a localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedUrlAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedUrlAttribute" /> class.
            </summary>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedUrlNameAttribute">
            <summary>
            Custom validation attribute to check if a property is a valid url name and to provide a localized error message.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedUrlNameAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedUrlNameAttribute" /> class.
            </summary>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedHasMasterLanguageAttribute">
            <summary>
            Custom validation attribute to check if the string contains the master language.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedHasMasterLanguageAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedHasMasterLanguageAttribute" /> class.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedHasMasterLanguageAttribute.IsValid(System.Object)">
            <summary>
            Determines whether the specified value of the object is valid.
            </summary>
            <param name="value">The value of the object to validate.</param>
            <returns>
            true if the specified value is valid; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedHasMasterLanguageAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.LocalizedValidLanguagesAttribute">
            <summary>
            Custom validation attribute to check if all languages are supported.
            </summary>
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedValidLanguagesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Annotations.LocalizedValidLanguagesAttribute" /> class.
            </summary>vi
        </member>
        <member name="M:GP.Utils.Annotations.LocalizedValidLanguagesAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class.
            </returns>
        </member>
        <member name="T:GP.Utils.Annotations.RegularExpressions">
            <summary>
            Provides common used regular expressions.
            </summary>
        </member>
        <member name="F:GP.Utils.Annotations.RegularExpressions.Mail">
            <summary>
            Regular expression to validate mail addresses.
            </summary>
        </member>
        <member name="F:GP.Utils.Annotations.RegularExpressions.Url">
            <summary>
            Regular expression to validate urls.
            </summary>
        </member>
        <member name="F:GP.Utils.Annotations.RegularExpressions.UrlName">
            <summary>
            Regular expression for valid names in urls.
            </summary>
        </member>
        <member name="F:GP.Utils.Annotations.RegularExpressions.Name">
            <summary>
            Regular expression for names.
            </summary>
        </member>
        <member name="T:GP.Utils.BaseTransformations32">
            <summary>
            Converts numbers from the decimal system to a system without 32 different characters and back.
            </summary>
        </member>
        <member name="M:GP.Utils.BaseTransformations32.Convert32To10(System.String)">
            <summary>
            Converts the string that represents a number with 32 signs to a normal decimal number.
            </summary>
            <param name="value">The number to convert. Cannot be null.</param>
            <returns>
            The number in the decimal system.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> contains a character that is not valid for this number system.</exception>
        </member>
        <member name="M:GP.Utils.BaseTransformations32.Convert10To32(System.Int64)">
            <summary>
            Converts the an decimal value to a string that represents a number with 32 different characters.
            </summary>
            <param name="decimalValue">The number to convert. Cannot be null.</param>
            <returns>
            The number in the systme with 32 different characters.
            </returns>
        </member>
        <member name="T:GP.Utils.BaseTransformations64">
            <summary>
            Converts numbers from the decimal system to a system without 64 different characters and back.
            </summary>
        </member>
        <member name="M:GP.Utils.BaseTransformations64.Convert64To10(System.String)">
            <summary>
            Converts the string that represents a number with 64 signs to a normal decimal number.
            </summary>
            <param name="value">The number to convert. Cannot be null.</param>
            <returns>
            The number in the decimal system.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> contains a character that is not valid for this number system.</exception>
        </member>
        <member name="M:GP.Utils.BaseTransformations64.Convert10To64(System.Int64)">
            <summary>
            Converts the an decimal value to a string that represents a number with 64 signs.
            </summary>
            <param name="decimalValue">The number to convert. Cannot be null.</param>
            <returns>
            The number in the systme with 64 different characters.
            </returns>
        </member>
        <member name="T:GP.Utils.BinaryExtensions">
            <summary>
            Extension methods to deal with binary files.
            </summary>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,GP.Utils.LocalizedString)">
            <summary>
            Writes the geolocation to the stream of the specified writer and advances the stream position by sixteen bytes.
            </summary>
            <param name="writer">The writer to write the geolocation to.</param>
            <param name="value">The localized string to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.WriteLocalizedString(System.IO.BinaryWriter,GP.Utils.LocalizedString)">
            <summary>
            Writes the geolocation to the stream of the specified writer and advances the stream position by sixteen bytes.
            </summary>
            <param name="writer">The writer to write the geolocation to.</param>
            <param name="value">The localized string to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadLocalizedString(System.IO.BinaryReader)">
            <summary>
            Reads the localized string from the stream and advances the stream by its size.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The localized string.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,GP.Utils.Geolocation)">
            <summary>
            Writes the geolocation to the stream of the specified writer and advances the stream position by sixteen bytes.
            </summary>
            <param name="writer">The writer to write the geolocation to.</param>
            <param name="value">The geolocation to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadGeolocation(System.IO.BinaryReader)">
            <summary>
            Reads the geolocation from the stream and advances the stream position by sixteen bytes.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The geolocation.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.WriteNullableString(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a length-prefixed string to this stream in the current encoding of the stream. The string can be null.
            </summary>
            <param name="writer">The writer to write the string to.</param>
            <param name="value">The string to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadNullableString(System.IO.BinaryReader)">
            <summary>
            Read a length-prefixed string from this stream in the current encoding of the stream. The string can be null.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The string.</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,System.Uri)">
            <summary>
            Writes a length-prefixed uri to this stream in the current encoding of the stream. The uri can be null.
            </summary>
            <param name="writer">The writer to write the uri to.</param>
            <param name="uri">The uri to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadUri(System.IO.BinaryReader)">
            <summary>
            Read a length-prefixed uri from this stream in the current encoding of the stream. The uri can be null.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The uri.</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,GP.Utils.Globalization.CurrencyInfo)">
            <summary>
            Writes the currency to the stream of the specified writer.
            </summary>
            <param name="writer">The writer to write the currency to.</param>
            <param name="currency">The currency to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadCurrency(System.IO.BinaryReader)">
            <summary>
            Reads the currency from the stream.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The currency.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,System.DateTime)">
            <summary>
            Writes the datetime to the stream of the specified writer.
            </summary>
            <param name="writer">The writer to write the datetime to.</param>
            <param name="value">The datetime to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadDateTime(System.IO.BinaryReader)">
            <summary>
            Reads the datetime from the stream.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The datetime.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,System.Nullable{System.DateTime})">
            <summary>
            Writes the nullable datetime to the stream of the specified writer.
            </summary>
            <param name="writer">The writer to write the nullable datetime to.</param>
            <param name="value">The nullable datetime to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadNullableDateTime(System.IO.BinaryReader)">
            <summary>
            Reads the nullable datetime from the stream.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The nullable datetime.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,System.DateTimeOffset)">
            <summary>
            Writes the datetime offset to the stream of the specified writer.
            </summary>
            <param name="writer">The writer to write the datetime offset to.</param>
            <param name="value">The datetime offset to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadDateTimeOffset(System.IO.BinaryReader)">
            <summary>
            Reads the datetime offset from the stream.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The datetime offset.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.Write(System.IO.BinaryWriter,System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes the nullable datetime offset to the stream of the specified writer.
            </summary>
            <param name="writer">The writer to write the nullable datetime offset to.</param>
            <param name="value">The nullable datetime offset to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.ReadNullableDateTimeOffset(System.IO.BinaryReader)">
            <summary>
            Reads the nullable datetime offset from the stream.
            </summary>
            <param name="reader">The reader.</param>
            <returns>
            The nullable datetime offset.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GP.Utils.BinaryExtensions.WriteByteEnum(System.IO.BinaryWriter,System.Object)">
            <summary>
            Writes the enum as byte value to the stream of the specified writer and advances the stream by one byte.
            </summary>
            <param name="writer">The writer to write the enumt to.</param>
            <param name="value">The enum to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="T:GP.Utils.CollectionExtensions">
            <summary>
            Extension methods to work with collections.
            </summary>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Batches the source sequence into sized buckets.
            </summary>
            <typeparam name="TSource">Type of elements in <paramref name="source"/> sequence.</typeparam>
            <param name="source">The source sequence.</param>
            <param name="size">Size of buckets.</param>
            <returns>A sequence of equally sized buckets containing elements of the source collection.</returns>
            <remarks>
            This operator uses deferred execution and streams its results (buckets and bucket content). 
            </remarks>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.EnueueAll``1(System.Collections.Generic.Queue{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Enqueue all items from the specified queue.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
            <param name="queue">The queue.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.EnueueAll``1(System.Collections.Concurrent.ConcurrentQueue{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Enqueue all items from the specified queue.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
            <param name="queue">The queue.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.DequeueAll``1(System.Collections.Concurrent.ConcurrentQueue{``0})">
            <summary>
            Dequeues all items from the specified queue.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
            <param name="queue">The queue.</param>
            <returns>
            The list of all items dequeued.
            </returns>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.TakeStepped``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Gets all items skipping items between.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="skip">The number of items to skip.</param>
            <param name="step">The step.</param>
            <returns>
            The resulting items.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="items"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.TakeStepped``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            Gets all items skipping items between.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="skip">The number of items to skip.</param>
            <param name="step">The step.</param>
            <returns>
            The resulting items.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="items"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.CreateHashCode(System.Collections.IList)">
            <summary>
            Creates a hash code for a list be making a bitwise or for each hash code
            of each item.
            </summary>
            <param name="list">The list where the hashCode should be created from. Cannot be null.</param>
            <returns>The hashCode of the list.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.CreateHashCode(System.Collections.IDictionary)">
            <summary>
            Creates a hash code for a dictionary be making a bitwise or for each hash code
            of each item.
            </summary>
            <param name="dictionary">The dictionary where the hashCode 
            should be created from. Cannot be null.</param>
            <returns>The hashCode of the list.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="dictionary"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Gets the value with the specified key from the dictionary or creates a new object.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary where to get the value from.</param>
            <param name="key">The key of the value from the dictionary.</param>
            <param name="creator">The creator to add the object. Cannot be null.</param>
            <returns>
            The final object.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="creator"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.GetOrCreate``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            Gets the value with the specified key from the dictionary or creates a new object. 
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary where to get the value from.</param>
            <param name="key">The key of the value from the dictionary.</param>
            <returns>The final object.</returns>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Runs the action for each item in the list.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="action">The action that is invoked for each item in the enumerable. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Threading.Tasks.Task})">
            <summary>
            Runs the action for each item in the list.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="action">The action that is invoked for each item in the enumerable. Cannot be null.</param>
            <returns>
            The task for synchronization.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.ForEachBlockAsync``1(System.Collections.Generic.List{``0},System.Int32,System.Func{``0,System.Int32,System.Threading.Tasks.Task},System.Action{System.Int32})">
            <summary>
            Runs the action for each item in the list.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="action">The action that is invoked for each item in the enumerable. Cannot be null.</param>
            <param name="blockSize">Size of one block.</param>
            <param name="blockCompleted">The action that is invoked when a block has been completed.</param>
            <returns>
            The task for synchronization.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.ForEachBlockAsync``1(System.Collections.Generic.List{``0},System.Int32,System.Func{``0[],System.Threading.Tasks.Task},System.Action{System.Int32})">
            <summary>
            Runs the action for each item in the list.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="blockSize">Size of one block.</param>
            <param name="action">The action that is invoked for each item in the enumerable. Cannot be null.</param>
            <param name="progressHandler">The progress handler.</param>
            <returns>
            The task for synchronization.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            items
            or
            action
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="action" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.Paged``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Func{``0,System.String})">
            <summary>
            Selects one page of the list of items.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
            <param name="items">The items to select.</param>
            <param name="page">The page index.</param>
            <param name="maxPages">The maximum number of pages.</param>
            <param name="groupSelector">The group selector.</param>
            <returns>
            The selected items.
            </returns>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.Split``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            Splits the specified items in a way that a split does not end with a group.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
            <param name="items">The items to split.</param>
            <param name="page">The page index.</param>
            <param name="parts">The number of pages.</param>
            <returns>
            The reduced list.
            </returns>
        </member>
        <member name="M:GP.Utils.CollectionExtensions.ForEachBlockAsync``1(System.Collections.Generic.List{``0},System.Int32,System.Func{``0[],System.Threading.Tasks.Task},System.Func{System.Int32,System.Threading.Tasks.Task})">
            <summary>
            Runs the action for each item in the list.
            </summary>
            <typeparam name="T">The type of the items in the list.</typeparam>
            <param name="items">The items to iterate. Cannot be null.</param>
            <param name="blockSize">Size of one block.</param>
            <param name="action">The action that is invoked for each item in the enumerable. Cannot be null.</param>
            <param name="progressHandler">The progress handler.</param>
            <returns>
            The task for synchronization.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            items
            or
            action
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="action" /> is null.</exception>
        </member>
        <member name="T:GP.Utils.CulturePreservingSynchronizationContext">
            <summary>
            Custom synchronization context, that preservers the current culture.
            </summary>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.CulturePreservingSynchronizationContext"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.Reset">
            <summary>
            Resets the context and applies the context before.
            </summary>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.MakeCurrent">
            <summary>
            Sets the current context as synchronization context.
            </summary>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.CreateCopy">
            <summary>
            When overridden in a derived class, creates a copy of the synchronization context.
            </summary>
            <returns>
            A new <see cref="T:System.Threading.SynchronizationContext" /> object.
            </returns>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches a synchronous message to a synchronization context.
            </summary>
            <param name="d">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches an asynchronous message to a synchronization context.
            </summary>
            <param name="d">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:GP.Utils.CulturePreservingSynchronizationContext.OperationStarted">
            <summary>
            When overridden in a derived class, responds to the notification that an operation has started.
            </summary>
        </member>
        <member name="T:GP.Utils.DateTimeExtensions">
            <summary>
            Extends the DateTime-Type
            </summary>
        </member>
        <member name="M:GP.Utils.DateTimeExtensions.CalculateAge(System.DateTimeOffset)">
            <summary>
            Calculates the current age in years for the given birthdate
            </summary>
            <param name="birthdate">The date of birth</param>
            <returns>Age in years</returns>
        </member>
        <member name="M:GP.Utils.DateTimeExtensions.CalculateAge(System.DateTime)">
            <summary>
            Calculates the current age in years for the given birthdate
            </summary>
            <param name="birthdate">The date of birth</param>
            <returns>Age in years</returns>
        </member>
        <member name="M:GP.Utils.DateTimeExtensions.CalculateAge(System.DateTime,System.DateTime)">
            <summary>
            Calculates the current age in years for the given birthdate
            </summary>
            <param name="birthdate">The date of birth</param>
            <param name="reference">the reference date on which the age is calculated</param>
            <returns>Age in years</returns>
        </member>
        <member name="M:GP.Utils.DateTimeExtensions.Next(System.DateTime,System.DayOfWeek)">
            <summary>
            Calculates the date when the next time is the given day of week. if the day of the week matches the given datetime, the date of it is returned instead
            </summary>
            <param name="start">Startpoint from which it should be looked for the next given day of week</param>
            <param name="day">Day of Week</param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.DateTimeExtensions.AddWeeks(System.DateTime,System.Int32)">
            <summary>
            Moves the date with the weekoffset
            </summary>
            <param name="start"></param>
            <param name="weekOffset"></param>
            <returns></returns>
        </member>
        <member name="T:GP.Utils.DisposableMarshalByRefObject">
            <summary>
            Base class for all disposable objects.
            </summary>
        </member>
        <member name="P:GP.Utils.DisposableMarshalByRefObject.NestedMarshalByRefObjects">
            <summary>
            Gets an enumeration of nested <see cref="T:System.MarshalByRefObject"/> objects.
            </summary>
        </member>
        <member name="P:GP.Utils.DisposableMarshalByRefObject.IsDisposed">
            <summary>
            Gets a value indicating whether the current instance is disposed.
            </summary>
            <value>
            <c>true</c> if the current instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.Dispose(System.Boolean)">
            <summary>
            Tries the dispose the current instance.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.Disconnect">
            <summary>
            Disconnects the remoting channel(s) of this object and all nested objects.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.DisposeObject(System.Boolean)">
            <summary>
            Releases unmanaged and optionally managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.
            </returns>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.DisposableObject"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:GP.Utils.DisposableMarshalByRefObject"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableMarshalByRefObject.ThrowIfDisposed">
            <summary>
            Throws an exception if the current instance is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The object has already been disposed.</exception>
        </member>
        <member name="T:GP.Utils.DisposableObject">
            <summary>
            Base class for all disposable objects.
            </summary>
        </member>
        <member name="P:GP.Utils.DisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the current instance is disposed.
            </summary>
            <value>
            <c>true</c> if the current instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:GP.Utils.DisposableObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableObject.Dispose(System.Boolean)">
            <summary>
            Tries the dispose the current instance.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GP.Utils.DisposableObject.DisposeObject(System.Boolean)">
            <summary>
            Releases unmanaged and optionally managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GP.Utils.DisposableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.DisposableObject"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.DisposableObject.ThrowIfDisposed">
            <summary>
            Throws an exception if the current instance is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The object has already been disposed.</exception>
        </member>
        <member name="T:GP.Utils.Drawing.ColorHelper">
            <summary>
            Static class that provides some methods for dealing with colors.
            </summary>
        </member>
        <member name="M:GP.Utils.Drawing.ColorHelper.CreateRandomColor">
            <summary>
            Creates a random color with a saturation of 1 and a brightness of 0.8.
            </summary>
            <returns>The random color</returns>
        </member>
        <member name="M:GP.Utils.Drawing.ColorHelper.CreateRandomColor(System.Double,System.Double)">
            <summary>
            Creates a random color with the specified brightness and saturation.
            </summary>
            <param name="saturation">The saturation of the random color. Must be between zero (exclusive) and one (inclusive).</param>
            <param name="brightness">The brightness of the random color. Must be between zero (exclusive) and one (inclusive).</param>
            <returns>The random color</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="saturation"/> is less or equals than zero.
            - or -
            <paramref name="saturation"/> is greater than one.
            - or -
            <paramref name="brightness"/> is less or equals than zero.
            - or -
            <paramref name="brightness"/> is greater than one.
            </exception>
        </member>
        <member name="T:GP.Utils.FileExtension">
            <summary>
            Represents a file extension as a pair of extension and mime type.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:GP.Utils.FileExtension.MimeType">
            <summary>
            Gets the mime type.
            </summary>
            <value>
            The mime type.
            </value>
        </member>
        <member name="M:GP.Utils.FileExtension.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.FileExtension"/> class with the extension and the mime type.
            </summary>
            <param name="extension">The extension. Cannot be null or empty.</param>
            <param name="mimeType">Type mime type. Cannot be null or empty.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="extension"/> is null.
            - or -
            <paramref name="mimeType"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="extension"/> is empty or contains only whitespaces.
            - or -
            <paramref name="mimeType"/> is empty or contains only whitespaces.
            </exception>
        </member>
        <member name="M:GP.Utils.FileExtension.MatchsFileName(System.String)">
            <summary>
            Determines if the file extension matchs the file extension of the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
            True, if the extension matchs or false otherwise.
            </returns>
        </member>
        <member name="M:GP.Utils.FileExtension.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:GP.Utils.FileExtension.Equals(GP.Utils.FileExtension)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.FileExtension.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.FileExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:GP.Utils.FileExtension.GetFileExtension(System.String)">
            <summary>
            Gets the file extension by the extension.
            </summary>
            <param name="extension">The extension. Cannot be null.</param>
            <returns>
            The file extension.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="extension"/> is null.</exception>
        </member>
        <member name="P:GP.Utils.FileExtension.AA">
            <summary>
            Defines the file extension AA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AAC">
            <summary>
            Defines the file extension AAC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AAF">
            <summary>
            Defines the file extension AAF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AAX">
            <summary>
            Defines the file extension AAX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AC3">
            <summary>
            Defines the file extension AC3.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACA">
            <summary>
            Defines the file extension ACA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDA">
            <summary>
            Defines the file extension ACCDA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDB">
            <summary>
            Defines the file extension ACCDB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDC">
            <summary>
            Defines the file extension ACCDC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDE">
            <summary>
            Defines the file extension ACCDE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDR">
            <summary>
            Defines the file extension ACCDR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDT">
            <summary>
            Defines the file extension ACCDT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCDW">
            <summary>
            Defines the file extension ACCDW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACCFT">
            <summary>
            Defines the file extension ACCFT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ACX">
            <summary>
            Defines the file extension ACX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADDIN">
            <summary>
            Defines the file extension ADDIN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADE">
            <summary>
            Defines the file extension ADE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADOBEBRIDGE">
            <summary>
            Defines the file extension ADOBEBRIDGE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADP">
            <summary>
            Defines the file extension ADP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADT">
            <summary>
            Defines the file extension ADT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ADTS">
            <summary>
            Defines the file extension ADTS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AFM">
            <summary>
            Defines the file extension AFM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AI">
            <summary>
            Defines the file extension AI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AIF">
            <summary>
            Defines the file extension AIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AIFC">
            <summary>
            Defines the file extension AIFC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AIFF">
            <summary>
            Defines the file extension AIFF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AIR">
            <summary>
            Defines the file extension AIR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AMC">
            <summary>
            Defines the file extension AMC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.APPLICATION">
            <summary>
            Defines the file extension APPLICATION.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ART">
            <summary>
            Defines the file extension ART.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASA">
            <summary>
            Defines the file extension ASA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASAX">
            <summary>
            Defines the file extension ASAX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASCX">
            <summary>
            Defines the file extension ASCX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASD">
            <summary>
            Defines the file extension ASD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASF">
            <summary>
            Defines the file extension ASF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASHX">
            <summary>
            Defines the file extension ASHX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASI">
            <summary>
            Defines the file extension ASI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASM">
            <summary>
            Defines the file extension ASM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASMX">
            <summary>
            Defines the file extension ASMX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASPX">
            <summary>
            Defines the file extension ASPX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASR">
            <summary>
            Defines the file extension ASR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ASX">
            <summary>
            Defines the file extension ASX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ATOM">
            <summary>
            Defines the file extension ATOM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AU">
            <summary>
            Defines the file extension AU.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AVI">
            <summary>
            Defines the file extension AVI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.AXS">
            <summary>
            Defines the file extension AXS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.BAS">
            <summary>
            Defines the file extension BAS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.BCPIO">
            <summary>
            Defines the file extension BCPIO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.BIN">
            <summary>
            Defines the file extension BIN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.BMP">
            <summary>
            Defines the file extension BMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.C">
            <summary>
            Defines the file extension C.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CAB">
            <summary>
            Defines the file extension CAB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CAF">
            <summary>
            Defines the file extension CAF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CALX">
            <summary>
            Defines the file extension CALX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CAT">
            <summary>
            Defines the file extension CAT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CC">
            <summary>
            Defines the file extension CC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CD">
            <summary>
            Defines the file extension CD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CDDA">
            <summary>
            Defines the file extension CDDA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CDF">
            <summary>
            Defines the file extension CDF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CER">
            <summary>
            Defines the file extension CER.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CHM">
            <summary>
            Defines the file extension CHM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CLASS">
            <summary>
            Defines the file extension CLASS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CLP">
            <summary>
            Defines the file extension CLP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CMX">
            <summary>
            Defines the file extension CMX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CNF">
            <summary>
            Defines the file extension CNF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.COD">
            <summary>
            Defines the file extension COD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CONFIG">
            <summary>
            Defines the file extension CONFIG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CONTACT">
            <summary>
            Defines the file extension CONTACT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.COVERAGE">
            <summary>
            Defines the file extension COVERAGE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CPIO">
            <summary>
            Defines the file extension CPIO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CPP">
            <summary>
            Defines the file extension CPP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CRD">
            <summary>
            Defines the file extension CRD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CRL">
            <summary>
            Defines the file extension CRL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CRT">
            <summary>
            Defines the file extension CRT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CS">
            <summary>
            Defines the file extension CS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CSDPROJ">
            <summary>
            Defines the file extension CSDPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CSH">
            <summary>
            Defines the file extension CSH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CSPROJ">
            <summary>
            Defines the file extension CSPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CSS">
            <summary>
            Defines the file extension CSS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CSV">
            <summary>
            Defines the file extension CSV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CUR">
            <summary>
            Defines the file extension CUR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.CXX">
            <summary>
            Defines the file extension CXX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DAT">
            <summary>
            Defines the file extension DAT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DATASOURCE">
            <summary>
            Defines the file extension DATASOURCE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DBPROJ">
            <summary>
            Defines the file extension DBPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DCR">
            <summary>
            Defines the file extension DCR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DEF">
            <summary>
            Defines the file extension DEF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DEPLOY">
            <summary>
            Defines the file extension DEPLOY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DER">
            <summary>
            Defines the file extension DER.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DGML">
            <summary>
            Defines the file extension DGML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DIB">
            <summary>
            Defines the file extension DIB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DIF">
            <summary>
            Defines the file extension DIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DIR">
            <summary>
            Defines the file extension DIR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DISCO">
            <summary>
            Defines the file extension DISCO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DLL">
            <summary>
            Defines the file extension DLL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DLM">
            <summary>
            Defines the file extension DLM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOC">
            <summary>
            Defines the file extension DOC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOCM">
            <summary>
            Defines the file extension DOCM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOCX">
            <summary>
            Defines the file extension DOCX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOT">
            <summary>
            Defines the file extension DOT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOTM">
            <summary>
            Defines the file extension DOTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DOTX">
            <summary>
            Defines the file extension DOTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DSP">
            <summary>
            Defines the file extension DSP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DSW">
            <summary>
            Defines the file extension DSW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DTD">
            <summary>
            Defines the file extension DTD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DTSCONFIG">
            <summary>
            Defines the file extension DTSCONFIG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DV">
            <summary>
            Defines the file extension DV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DVI">
            <summary>
            Defines the file extension DVI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DWF">
            <summary>
            Defines the file extension DWF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DWP">
            <summary>
            Defines the file extension DWP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.DXR">
            <summary>
            Defines the file extension DXR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EML">
            <summary>
            Defines the file extension EML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EMZ">
            <summary>
            Defines the file extension EMZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EOT">
            <summary>
            Defines the file extension EOT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EPS">
            <summary>
            Defines the file extension EPS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ETL">
            <summary>
            Defines the file extension ETL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ETX">
            <summary>
            Defines the file extension ETX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EVY">
            <summary>
            Defines the file extension EVY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.EXE">
            <summary>
            Defines the file extension EXE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FDF">
            <summary>
            Defines the file extension FDF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FIF">
            <summary>
            Defines the file extension FIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FILTERS">
            <summary>
            Defines the file extension FILTERS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FLA">
            <summary>
            Defines the file extension FLA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FLR">
            <summary>
            Defines the file extension FLR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FLV">
            <summary>
            Defines the file extension FLV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FSSCRIPT">
            <summary>
            Defines the file extension FSSCRIPT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.FSX">
            <summary>
            Defines the file extension FSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GENERICTEST">
            <summary>
            Defines the file extension GENERICTEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GIF">
            <summary>
            Defines the file extension GIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GROUP">
            <summary>
            Defines the file extension GROUP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GSM">
            <summary>
            Defines the file extension GSM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GTAR">
            <summary>
            Defines the file extension GTAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.GZ">
            <summary>
            Defines the file extension GZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.H">
            <summary>
            Defines the file extension H.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HDF">
            <summary>
            Defines the file extension HDF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HDML">
            <summary>
            Defines the file extension HDML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HHC">
            <summary>
            Defines the file extension HHC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HHK">
            <summary>
            Defines the file extension HHK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HHP">
            <summary>
            Defines the file extension HHP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HLP">
            <summary>
            Defines the file extension HLP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HPP">
            <summary>
            Defines the file extension HPP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HQX">
            <summary>
            Defines the file extension HQX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HTA">
            <summary>
            Defines the file extension HTA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HTC">
            <summary>
            Defines the file extension HTC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HTM">
            <summary>
            Defines the file extension HTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HTML">
            <summary>
            Defines the file extension HTML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HTT">
            <summary>
            Defines the file extension HTT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXA">
            <summary>
            Defines the file extension HXA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXC">
            <summary>
            Defines the file extension HXC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXD">
            <summary>
            Defines the file extension HXD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXE">
            <summary>
            Defines the file extension HXE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXF">
            <summary>
            Defines the file extension HXF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXH">
            <summary>
            Defines the file extension HXH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXI">
            <summary>
            Defines the file extension HXI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXK">
            <summary>
            Defines the file extension HXK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXQ">
            <summary>
            Defines the file extension HXQ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXR">
            <summary>
            Defines the file extension HXR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXS">
            <summary>
            Defines the file extension HXS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXT">
            <summary>
            Defines the file extension HXT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXV">
            <summary>
            Defines the file extension HXV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXW">
            <summary>
            Defines the file extension HXW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.HXX">
            <summary>
            Defines the file extension HXX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.I">
            <summary>
            Defines the file extension I.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ICO">
            <summary>
            Defines the file extension ICO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ICS">
            <summary>
            Defines the file extension ICS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IDL">
            <summary>
            Defines the file extension IDL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IEF">
            <summary>
            Defines the file extension IEF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.III">
            <summary>
            Defines the file extension III.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.INC">
            <summary>
            Defines the file extension INC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.INF">
            <summary>
            Defines the file extension INF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.INL">
            <summary>
            Defines the file extension INL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.INS">
            <summary>
            Defines the file extension INS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IPA">
            <summary>
            Defines the file extension IPA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IPG">
            <summary>
            Defines the file extension IPG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IPPROJ">
            <summary>
            Defines the file extension IPPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IPSW">
            <summary>
            Defines the file extension IPSW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IQY">
            <summary>
            Defines the file extension IQY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ISP">
            <summary>
            Defines the file extension ISP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ITE">
            <summary>
            Defines the file extension ITE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ITLP">
            <summary>
            Defines the file extension ITLP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ITMS">
            <summary>
            Defines the file extension ITMS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ITPC">
            <summary>
            Defines the file extension ITPC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.IVF">
            <summary>
            Defines the file extension IVF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JAR">
            <summary>
            Defines the file extension JAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JAVA">
            <summary>
            Defines the file extension JAVA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JCK">
            <summary>
            Defines the file extension JCK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JCZ">
            <summary>
            Defines the file extension JCZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JFIF">
            <summary>
            Defines the file extension JFIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JNLP">
            <summary>
            Defines the file extension JNLP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JPB">
            <summary>
            Defines the file extension JPB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JPE">
            <summary>
            Defines the file extension JPE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JPEG">
            <summary>
            Defines the file extension JPEG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JPG">
            <summary>
            Defines the file extension JPG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JS">
            <summary>
            Defines the file extension JS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JSX">
            <summary>
            Defines the file extension JSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JSXBIN">
            <summary>
            Defines the file extension JSXBIN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.JSON">
            <summary>
            Defines the file extension JSON.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LATEX">
            <summary>
            Defines the file extension LATEX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LIT">
            <summary>
            Defines the file extension LIT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LOADTEST">
            <summary>
            Defines the file extension LOADTEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LPK">
            <summary>
            Defines the file extension LPK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LSF">
            <summary>
            Defines the file extension LSF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LST">
            <summary>
            Defines the file extension LST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LSX">
            <summary>
            Defines the file extension LSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.LZH">
            <summary>
            Defines the file extension LZH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M13">
            <summary>
            Defines the file extension M13.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M14">
            <summary>
            Defines the file extension M14.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M1V">
            <summary>
            Defines the file extension M1V.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M2T">
            <summary>
            Defines the file extension M2T.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M2TS">
            <summary>
            Defines the file extension M2TS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M2V">
            <summary>
            Defines the file extension M2V.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M3U">
            <summary>
            Defines the file extension M3U.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M3U8">
            <summary>
            Defines the file extension M3U8.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M4A">
            <summary>
            Defines the file extension M4A.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M4B">
            <summary>
            Defines the file extension M4B.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M4P">
            <summary>
            Defines the file extension M4P.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M4R">
            <summary>
            Defines the file extension M4R.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.M4V">
            <summary>
            Defines the file extension M4V.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MAC">
            <summary>
            Defines the file extension MAC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MAK">
            <summary>
            Defines the file extension MAK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MAN">
            <summary>
            Defines the file extension MAN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MANIFEST">
            <summary>
            Defines the file extension MANIFEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MAP">
            <summary>
            Defines the file extension MAP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MASTER">
            <summary>
            Defines the file extension MASTER.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MDA">
            <summary>
            Defines the file extension MDA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MDB">
            <summary>
            Defines the file extension MDB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MDE">
            <summary>
            Defines the file extension MDE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MDP">
            <summary>
            Defines the file extension MDP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ME">
            <summary>
            Defines the file extension ME.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MFP">
            <summary>
            Defines the file extension MFP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MHT">
            <summary>
            Defines the file extension MHT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MHTML">
            <summary>
            Defines the file extension MHTML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MID">
            <summary>
            Defines the file extension MID.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MIDI">
            <summary>
            Defines the file extension MIDI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MIX">
            <summary>
            Defines the file extension MIX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MK">
            <summary>
            Defines the file extension MK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MMF">
            <summary>
            Defines the file extension MMF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MNO">
            <summary>
            Defines the file extension MNO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MNY">
            <summary>
            Defines the file extension MNY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MOD">
            <summary>
            Defines the file extension MOD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MOV">
            <summary>
            Defines the file extension MOV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MOVIE">
            <summary>
            Defines the file extension MOVIE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MP2">
            <summary>
            Defines the file extension MP2.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MP2V">
            <summary>
            Defines the file extension MP2V.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MP3">
            <summary>
            Defines the file extension MP3.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MP4">
            <summary>
            Defines the file extension MP4.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MP4V">
            <summary>
            Defines the file extension MP4V.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPA">
            <summary>
            Defines the file extension MPA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPE">
            <summary>
            Defines the file extension MPE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPEG">
            <summary>
            Defines the file extension MPEG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPF">
            <summary>
            Defines the file extension MPF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPG">
            <summary>
            Defines the file extension MPG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPP">
            <summary>
            Defines the file extension MPP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MPV2">
            <summary>
            Defines the file extension MPV2.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MQV">
            <summary>
            Defines the file extension MQV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MS">
            <summary>
            Defines the file extension MS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MSI">
            <summary>
            Defines the file extension MSI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MSO">
            <summary>
            Defines the file extension MSO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MTS">
            <summary>
            Defines the file extension MTS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MTX">
            <summary>
            Defines the file extension MTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MVB">
            <summary>
            Defines the file extension MVB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MVC">
            <summary>
            Defines the file extension MVC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.MXP">
            <summary>
            Defines the file extension MXP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.NC">
            <summary>
            Defines the file extension NC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.NSC">
            <summary>
            Defines the file extension NSC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.NWS">
            <summary>
            Defines the file extension NWS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.OCX">
            <summary>
            Defines the file extension OCX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODA">
            <summary>
            Defines the file extension ODA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODC">
            <summary>
            Defines the file extension ODC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODH">
            <summary>
            Defines the file extension ODH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODL">
            <summary>
            Defines the file extension ODL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODP">
            <summary>
            Defines the file extension ODP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODS">
            <summary>
            Defines the file extension ODS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ODT">
            <summary>
            Defines the file extension ODT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONE">
            <summary>
            Defines the file extension ONE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONEA">
            <summary>
            Defines the file extension ONEA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONEPKG">
            <summary>
            Defines the file extension ONEPKG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONETMP">
            <summary>
            Defines the file extension ONETMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONETOC">
            <summary>
            Defines the file extension ONETOC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ONETOC2">
            <summary>
            Defines the file extension ONETOC2.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ORDEREDTEST">
            <summary>
            Defines the file extension ORDEREDTEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.OSDX">
            <summary>
            Defines the file extension OSDX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P10">
            <summary>
            Defines the file extension P10.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P12">
            <summary>
            Defines the file extension P12.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P7B">
            <summary>
            Defines the file extension P7B.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P7C">
            <summary>
            Defines the file extension P7C.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P7M">
            <summary>
            Defines the file extension P7M.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P7R">
            <summary>
            Defines the file extension P7R.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.P7S">
            <summary>
            Defines the file extension P7S.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PBM">
            <summary>
            Defines the file extension PBM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PCAST">
            <summary>
            Defines the file extension PCAST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PCT">
            <summary>
            Defines the file extension PCT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PCX">
            <summary>
            Defines the file extension PCX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PCZ">
            <summary>
            Defines the file extension PCZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PDF">
            <summary>
            Defines the file extension PDF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PFB">
            <summary>
            Defines the file extension PFB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PFM">
            <summary>
            Defines the file extension PFM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PFX">
            <summary>
            Defines the file extension PFX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PGM">
            <summary>
            Defines the file extension PGM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PIC">
            <summary>
            Defines the file extension PIC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PICT">
            <summary>
            Defines the file extension PICT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PKGDEF">
            <summary>
            Defines the file extension PKGDEF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PKGUNDEF">
            <summary>
            Defines the file extension PKGUNDEF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PKO">
            <summary>
            Defines the file extension PKO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PLS">
            <summary>
            Defines the file extension PLS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PMA">
            <summary>
            Defines the file extension PMA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PMC">
            <summary>
            Defines the file extension PMC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PML">
            <summary>
            Defines the file extension PML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PMR">
            <summary>
            Defines the file extension PMR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PMW">
            <summary>
            Defines the file extension PMW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PNG">
            <summary>
            Defines the file extension PNG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PNM">
            <summary>
            Defines the file extension PNM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PNT">
            <summary>
            Defines the file extension PNT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PNTG">
            <summary>
            Defines the file extension PNTG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PNZ">
            <summary>
            Defines the file extension PNZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.POT">
            <summary>
            Defines the file extension POT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.POTM">
            <summary>
            Defines the file extension POTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.POTX">
            <summary>
            Defines the file extension POTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPA">
            <summary>
            Defines the file extension PPA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPAM">
            <summary>
            Defines the file extension PPAM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPM">
            <summary>
            Defines the file extension PPM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPS">
            <summary>
            Defines the file extension PPS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPSM">
            <summary>
            Defines the file extension PPSM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPSX">
            <summary>
            Defines the file extension PPSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPT">
            <summary>
            Defines the file extension PPT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPTM">
            <summary>
            Defines the file extension PPTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PPTX">
            <summary>
            Defines the file extension PPTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PRF">
            <summary>
            Defines the file extension PRF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PRM">
            <summary>
            Defines the file extension PRM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PRX">
            <summary>
            Defines the file extension PRX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PS">
            <summary>
            Defines the file extension PS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PSC1">
            <summary>
            Defines the file extension PSC1.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PSD">
            <summary>
            Defines the file extension PSD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PSESS">
            <summary>
            Defines the file extension PSESS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PSM">
            <summary>
            Defines the file extension PSM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PSP">
            <summary>
            Defines the file extension PSP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PUB">
            <summary>
            Defines the file extension PUB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.PWZ">
            <summary>
            Defines the file extension PWZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QHT">
            <summary>
            Defines the file extension QHT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QHTM">
            <summary>
            Defines the file extension QHTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QT">
            <summary>
            Defines the file extension QT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QTI">
            <summary>
            Defines the file extension QTI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QTIF">
            <summary>
            Defines the file extension QTIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QTL">
            <summary>
            Defines the file extension QTL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.QXD">
            <summary>
            Defines the file extension QXD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RA">
            <summary>
            Defines the file extension RA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RAM">
            <summary>
            Defines the file extension RAM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RAR">
            <summary>
            Defines the file extension RAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RAS">
            <summary>
            Defines the file extension RAS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RAT">
            <summary>
            Defines the file extension RAT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RC">
            <summary>
            Defines the file extension RC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RC2">
            <summary>
            Defines the file extension RC2.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RCT">
            <summary>
            Defines the file extension RCT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RDLC">
            <summary>
            Defines the file extension RDLC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RESX">
            <summary>
            Defines the file extension RESX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RF">
            <summary>
            Defines the file extension RF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RGB">
            <summary>
            Defines the file extension RGB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RGS">
            <summary>
            Defines the file extension RGS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RM">
            <summary>
            Defines the file extension RM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RMI">
            <summary>
            Defines the file extension RMI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RMP">
            <summary>
            Defines the file extension RMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ROFF">
            <summary>
            Defines the file extension ROFF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RPM">
            <summary>
            Defines the file extension RPM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RQY">
            <summary>
            Defines the file extension RQY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RTF">
            <summary>
            Defines the file extension RTF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RTX">
            <summary>
            Defines the file extension RTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.RULESET">
            <summary>
            Defines the file extension RULESET.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.S">
            <summary>
            Defines the file extension S.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SAFARIEXTZ">
            <summary>
            Defines the file extension SAFARIEXTZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SCD">
            <summary>
            Defines the file extension SCD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SCT">
            <summary>
            Defines the file extension SCT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SD2">
            <summary>
            Defines the file extension SD2.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SDP">
            <summary>
            Defines the file extension SDP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SEA">
            <summary>
            Defines the file extension SEA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SETPAY">
            <summary>
            Defines the file extension SETPAY.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SETREG">
            <summary>
            Defines the file extension SETREG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SETTINGS">
            <summary>
            Defines the file extension SETTINGS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SGIMB">
            <summary>
            Defines the file extension SGIMB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SGML">
            <summary>
            Defines the file extension SGML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SH">
            <summary>
            Defines the file extension SH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SHAR">
            <summary>
            Defines the file extension SHAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SHTML">
            <summary>
            Defines the file extension SHTML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SIT">
            <summary>
            Defines the file extension SIT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SITEMAP">
            <summary>
            Defines the file extension SITEMAP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SKIN">
            <summary>
            Defines the file extension SKIN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SLDM">
            <summary>
            Defines the file extension SLDM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SLDX">
            <summary>
            Defines the file extension SLDX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SLK">
            <summary>
            Defines the file extension SLK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SLN">
            <summary>
            Defines the file extension SLN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SMD">
            <summary>
            Defines the file extension SMD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SMI">
            <summary>
            Defines the file extension SMI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SMX">
            <summary>
            Defines the file extension SMX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SMZ">
            <summary>
            Defines the file extension SMZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SND">
            <summary>
            Defines the file extension SND.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SNIPPET">
            <summary>
            Defines the file extension SNIPPET.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SNP">
            <summary>
            Defines the file extension SNP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SOL">
            <summary>
            Defines the file extension SOL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SOR">
            <summary>
            Defines the file extension SOR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SPC">
            <summary>
            Defines the file extension SPC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SPL">
            <summary>
            Defines the file extension SPL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SRC">
            <summary>
            Defines the file extension SRC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SRF">
            <summary>
            Defines the file extension SRF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SSISDEPLOYMENTMANIFEST">
            <summary>
            Defines the file extension SSISDEPLOYMENTMANIFEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SSM">
            <summary>
            Defines the file extension SSM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SST">
            <summary>
            Defines the file extension SST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.STL">
            <summary>
            Defines the file extension STL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.STYLECOP">
            <summary>
            Defines the file extension STYLECOP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SV4CPIO">
            <summary>
            Defines the file extension SV4CPIO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SV4CRC">
            <summary>
            Defines the file extension SV4CRC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SVC">
            <summary>
            Defines the file extension SVC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.SWF">
            <summary>
            Defines the file extension SWF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.T">
            <summary>
            Defines the file extension T.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TAR">
            <summary>
            Defines the file extension TAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TCL">
            <summary>
            Defines the file extension TCL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TESTRUNCONFIG">
            <summary>
            Defines the file extension TESTRUNCONFIG.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TESTSETTINGS">
            <summary>
            Defines the file extension TESTSETTINGS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TEX">
            <summary>
            Defines the file extension TEX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TEXI">
            <summary>
            Defines the file extension TEXI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TEXINFO">
            <summary>
            Defines the file extension TEXINFO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TGZ">
            <summary>
            Defines the file extension TGZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.THMX">
            <summary>
            Defines the file extension THMX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.THN">
            <summary>
            Defines the file extension THN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TIF">
            <summary>
            Defines the file extension TIF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TIFF">
            <summary>
            Defines the file extension TIFF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TLH">
            <summary>
            Defines the file extension TLH.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TLI">
            <summary>
            Defines the file extension TLI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TOC">
            <summary>
            Defines the file extension TOC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TR">
            <summary>
            Defines the file extension TR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TRM">
            <summary>
            Defines the file extension TRM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TRX">
            <summary>
            Defines the file extension TRX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TS">
            <summary>
            Defines the file extension TS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TSV">
            <summary>
            Defines the file extension TSV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TTF">
            <summary>
            Defines the file extension TTF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TTS">
            <summary>
            Defines the file extension TTS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.TXT">
            <summary>
            Defines the file extension TXT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.U32">
            <summary>
            Defines the file extension U32.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ULS">
            <summary>
            Defines the file extension ULS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.USER">
            <summary>
            Defines the file extension USER.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.USTAR">
            <summary>
            Defines the file extension USTAR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VB">
            <summary>
            Defines the file extension VB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VBDPROJ">
            <summary>
            Defines the file extension VBDPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VBK">
            <summary>
            Defines the file extension VBK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VBPROJ">
            <summary>
            Defines the file extension VBPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VBS">
            <summary>
            Defines the file extension VBS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VCF">
            <summary>
            Defines the file extension VCF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VCPROJ">
            <summary>
            Defines the file extension VCPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VCS">
            <summary>
            Defines the file extension VCS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VCXPROJ">
            <summary>
            Defines the file extension VCXPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VDDPROJ">
            <summary>
            Defines the file extension VDDPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VDP">
            <summary>
            Defines the file extension VDP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VDPROJ">
            <summary>
            Defines the file extension VDPROJ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VDX">
            <summary>
            Defines the file extension VDX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VML">
            <summary>
            Defines the file extension VML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSCONTENT">
            <summary>
            Defines the file extension VSCONTENT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSCT">
            <summary>
            Defines the file extension VSCT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSD">
            <summary>
            Defines the file extension VSD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSI">
            <summary>
            Defines the file extension VSI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSIX">
            <summary>
            Defines the file extension VSIX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSIXLANGPACK">
            <summary>
            Defines the file extension VSIXLANGPACK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSIXMANIFEST">
            <summary>
            Defines the file extension VSIXMANIFEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSMDI">
            <summary>
            Defines the file extension VSMDI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSPSCC">
            <summary>
            Defines the file extension VSPSCC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSS">
            <summary>
            Defines the file extension VSS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSSCC">
            <summary>
            Defines the file extension VSSCC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSSETTINGS">
            <summary>
            Defines the file extension VSSETTINGS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSSSCC">
            <summary>
            Defines the file extension VSSSCC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VST">
            <summary>
            Defines the file extension VST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSTEMPLATE">
            <summary>
            Defines the file extension VSTEMPLATE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSTO">
            <summary>
            Defines the file extension VSTO.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSW">
            <summary>
            Defines the file extension VSW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VSX">
            <summary>
            Defines the file extension VSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.VTX">
            <summary>
            Defines the file extension VTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WAV">
            <summary>
            Defines the file extension WAV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WAVE">
            <summary>
            Defines the file extension WAVE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WAX">
            <summary>
            Defines the file extension WAX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WBK">
            <summary>
            Defines the file extension WBK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WBMP">
            <summary>
            Defines the file extension WBMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WCM">
            <summary>
            Defines the file extension WCM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WDB">
            <summary>
            Defines the file extension WDB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WDP">
            <summary>
            Defines the file extension WDP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WEBARCHIVE">
            <summary>
            Defines the file extension WEBARCHIVE.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WEBTEST">
            <summary>
            Defines the file extension WEBTEST.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WIQ">
            <summary>
            Defines the file extension WIQ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WIZ">
            <summary>
            Defines the file extension WIZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WKS">
            <summary>
            Defines the file extension WKS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WLMP">
            <summary>
            Defines the file extension WLMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WLPGINSTALL">
            <summary>
            Defines the file extension WLPGINSTALL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WLPGINSTALL3">
            <summary>
            Defines the file extension WLPGINSTALL3.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WM">
            <summary>
            Defines the file extension WM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMA">
            <summary>
            Defines the file extension WMA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMD">
            <summary>
            Defines the file extension WMD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMF">
            <summary>
            Defines the file extension WMF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WML">
            <summary>
            Defines the file extension WML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMLC">
            <summary>
            Defines the file extension WMLC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMLS">
            <summary>
            Defines the file extension WMLS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMLSC">
            <summary>
            Defines the file extension WMLSC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMP">
            <summary>
            Defines the file extension WMP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMV">
            <summary>
            Defines the file extension WMV.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMX">
            <summary>
            Defines the file extension WMX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WMZ">
            <summary>
            Defines the file extension WMZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WPL">
            <summary>
            Defines the file extension WPL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WPS">
            <summary>
            Defines the file extension WPS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WRI">
            <summary>
            Defines the file extension WRI.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WRL">
            <summary>
            Defines the file extension WRL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WRZ">
            <summary>
            Defines the file extension WRZ.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WSC">
            <summary>
            Defines the file extension WSC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WSDL">
            <summary>
            Defines the file extension WSDL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.WVX">
            <summary>
            Defines the file extension WVX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.X">
            <summary>
            Defines the file extension X.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XAF">
            <summary>
            Defines the file extension XAF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XAML">
            <summary>
            Defines the file extension XAML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XAP">
            <summary>
            Defines the file extension XAP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XBAP">
            <summary>
            Defines the file extension XBAP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XBM">
            <summary>
            Defines the file extension XBM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XDR">
            <summary>
            Defines the file extension XDR.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XHT">
            <summary>
            Defines the file extension XHT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XHTML">
            <summary>
            Defines the file extension XHTML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLA">
            <summary>
            Defines the file extension XLA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLAM">
            <summary>
            Defines the file extension XLAM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLC">
            <summary>
            Defines the file extension XLC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLD">
            <summary>
            Defines the file extension XLD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLK">
            <summary>
            Defines the file extension XLK.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLL">
            <summary>
            Defines the file extension XLL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLM">
            <summary>
            Defines the file extension XLM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLS">
            <summary>
            Defines the file extension XLS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLSB">
            <summary>
            Defines the file extension XLSB.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLSM">
            <summary>
            Defines the file extension XLSM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLSX">
            <summary>
            Defines the file extension XLSX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLT">
            <summary>
            Defines the file extension XLT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLTM">
            <summary>
            Defines the file extension XLTM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLTX">
            <summary>
            Defines the file extension XLTX.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XLW">
            <summary>
            Defines the file extension XLW.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XML">
            <summary>
            Defines the file extension XML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XMTA">
            <summary>
            Defines the file extension XMTA.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XOF">
            <summary>
            Defines the file extension XOF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XOML">
            <summary>
            Defines the file extension XOML.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XPM">
            <summary>
            Defines the file extension XPM.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XPS">
            <summary>
            Defines the file extension XPS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSC">
            <summary>
            Defines the file extension XSC.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSD">
            <summary>
            Defines the file extension XSD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSF">
            <summary>
            Defines the file extension XSF.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSL">
            <summary>
            Defines the file extension XSL.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSLT">
            <summary>
            Defines the file extension XSLT.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSN">
            <summary>
            Defines the file extension XSN.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XSS">
            <summary>
            Defines the file extension XSS.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XTP">
            <summary>
            Defines the file extension XTP.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.XWD">
            <summary>
            Defines the file extension XWD.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.Z">
            <summary>
            Defines the file extension Z.
            </summary>
        </member>
        <member name="P:GP.Utils.FileExtension.ZIP">
            <summary>
            Defines the file extension ZIP.
            </summary>
        </member>
        <member name="T:GP.Utils.Geography">
            <summary>
            Defines a geography.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.GeographyType">
            <summary>
            Gets or sets the geography type.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Query">
            <summary>
            Gets or sets the name of the geolocation element.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Establishment">
            <summary>
            Gets or sets the name of the establishment, for example the name of the airport.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.District">
            <summary>
            Gets or sets the name of the district.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.StreetNumber">
            <summary>
            Gets or sets the street number.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Street">
            <summary>
            Gets or sets the name of the street.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Sublocality">
            <summary>
            Gets or sets the sublocality.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Locality">
            <summary>
            Gets or sets the locality.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Country">
            <summary>
            Gets or sets the name of the country.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.CountryCode">
            <summary>
            Gets or sets the country code of the location.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Culture">
            <summary>
            Gets or sets the culture of the 
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.EnglishLocality">
            <summary>
            Gets or sets the english locality.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.EnglishCountry">
            <summary>
            Gets or sets the english locality.
            </summary>
        </member>
        <member name="P:GP.Utils.Geography.Geolocation">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="M:GP.Utils.Geography.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Geography"/> class.
            </summary>
        </member>
        <member name="M:GP.Utils.Geography.IsSublocalityOnly">
            <summary>
            Determines whether the geography is a sublocality only.
            </summary>
            <returns>
            True if the geography is a sublocality only.
            </returns>
        </member>
        <member name="M:GP.Utils.Geography.IsLocalityOnly">
            <summary>
            Determines whether the geography is a locality only.
            </summary>
            <returns>
            True if the geography is a locality only.
            </returns>
        </member>
        <member name="M:GP.Utils.Geography.IsTrainOrTransitStation">
            <summary>
            Determines whether the geography is a train station.
            </summary>
            <returns>
            True if the geography is a train station.
            </returns>
        </member>
        <member name="M:GP.Utils.Geography.IsValid(GP.Utils.Geography,System.Boolean)">
            <summary>
            Checks if the specified geography is valid or not.
            </summary>
            <param name="geography">The geography to check.</param>
            <param name="withLocality">if set to <c>true</c> also checks for locality.</param>
            <returns>
            The result of the validation check.
            </returns>
        </member>
        <member name="M:GP.Utils.Geography.Distance(GP.Utils.Geography)">
            <summary>
            Calculates the distance to the specified geography.
            </summary>
            <param name="geography">The geography to calculate the distance to. Cannot be null.</param>
            <returns>
            The distance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="geography"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Geography.Distance(System.Double,System.Double)">
            <summary>
            Calculates the distance to the specified geography.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <returns>
            The distance.
            </returns>
        </member>
        <member name="M:GP.Utils.Geography.AddressInvariantDisplayName">
            <summary>
            Returns the display name of the 
            </summary>
            <returns>
            The display name.
            </returns>
        </member>
        <member name="T:GP.Utils.GeolocationDistance">
            <summary>
            Defines a distance between two geolocations.
            </summary>
        </member>
        <member name="P:GP.Utils.GeolocationDistance.Start">
            <summary>
            Gets or sets the start geolocation.
            </summary>
        </member>
        <member name="P:GP.Utils.GeolocationDistance.End">
            <summary>
            Gets or sets the end geolocation.
            </summary>
        </member>
        <member name="P:GP.Utils.GeolocationDistance.Seconds">
            <summary>
            Gets the duration in seconds.
            </summary>
        </member>
        <member name="P:GP.Utils.GeolocationDistance.Meters">
            <summary>
            Gets or sets the distance in meters.
            </summary>
        </member>
        <member name="M:GP.Utils.GeolocationDistance.IsValid(GP.Utils.GeolocationDistance)">
            <summary>
            Checks if the specified distance is valid or not.
            </summary>
            <param name="distance">The distance to check.</param>
            <returns>
            The result of the validation check.
            </returns>
        </member>
        <member name="T:GP.Utils.Geolocation">
            <summary>
            Defines a geography.
            </summary>
        </member>
        <member name="P:GP.Utils.Geolocation.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
        </member>
        <member name="P:GP.Utils.Geolocation.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
        </member>
        <member name="M:GP.Utils.Geolocation.Clone">
            <summary>
            Clones the current geolocation and returns a new instance.
            </summary>
            <returns>
            The cloned geolocation.
            </returns>
        </member>
        <member name="M:GP.Utils.Geolocation.IsValid(GP.Utils.Geolocation)">
            <summary>
            Checks if the specified geography is valid or not.
            </summary>
            <param name="geolocation">The geography to check.</param>
            <returns>
            The result of the validation check.
            </returns>
        </member>
        <member name="M:GP.Utils.Geolocation.Distance(GP.Utils.Geolocation)">
            <summary>
            Calculates the distance to the specified geolocation.
            </summary>
            <param name="geolocation">The geolocation to calculate the distance to. Cannot be null.</param>
            <returns>
            The distance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="geolocation"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Geolocation.Distance(System.Double,System.Double)">
            <summary>
            Calculates the distance to the specified geography.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <returns>
            The distance.
            </returns>
        </member>
        <member name="T:GP.Utils.GeolocationExtensions">
            <summary>
            Extension methods for geolocations.
            </summary>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.Center(System.Collections.Generic.IEnumerable{GP.Utils.Geography})">
            <summary>
            Calculates the center of all geographies.
            </summary>
            <param name="geographies">The geographies to calculate the center for.</param>
            <returns>
            The center of all geographies.
            </returns>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.Center(System.Collections.Generic.IEnumerable{GP.Utils.Geolocation})">
            <summary>
            Calculates the center of all geolocations.
            </summary>
            <param name="geolocations">The geolocations to calculate the center for.</param>
            <returns>
            The center of all geolocations.
            </returns>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.IsLatitudeValid(GP.Utils.Geolocation)">
            <summary>
            Check wether the latitude is valid ( -90 to 90 degress)
            </summary>
            <param name="geolocation">The gelocation for which the latitude should be checked.</param>
            <returns><c>true</c> if the latitude is valid; otherwise: false</returns>
            <seealso href="http://msdn.microsoft.com/de-de/library/system.device.location.geocoordinate.latitude(v=vs.110).aspx"/>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.IsLongitudeValid(GP.Utils.Geolocation)">
            <summary>
            Check wether the latitude is valid ( -90 to 90 degress)
            </summary>
            <param name="geolocation">The gelocation for which the latitude should be checked´.</param>
            <returns><c>true</c> if the latitude is valid; otherwise: false</returns>
            <seealso href="http://msdn.microsoft.com/de-de/library/system.device.location.geocoordinate.latitude(v=vs.110).aspx"/>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.IsLatitudeValid(System.Double)">
            <summary>
            Check wether the latitude is valid ( -90 to 90 degress)
            </summary>
            <param name="latitude">The latitude to check.</param>
            <returns><c>true</c> if the latitude is valid; otherwise: false</returns>
            <seealso href="http://msdn.microsoft.com/de-de/library/system.device.location.geocoordinate.latitude(v=vs.110).aspx"/>
        </member>
        <member name="M:GP.Utils.GeolocationExtensions.IsLongitudeValid(System.Double)">
            <summary>
            Check wether the longitude is valid ( -180 to 180 degress)
            </summary>
            <param name="longitude">The longitude to check.</param>
            <returns><c>true</c> if the latitude is valid; otherwise: false</returns>
            <seealso href="http://msdn.microsoft.com/de-de/library/system.device.location.geocoordinate.longitude(v=vs.110).aspx"/>
        </member>
        <member name="T:GP.Utils.Globalization.CountryCodeMapping">
            <summary>
            Maps different country codes and provides conversion operations.
            </summary>
        </member>
        <member name="M:GP.Utils.Globalization.CountryCodeMapping.ToThreeDigitsCode(System.String)">
            <summary>
            Converts a country code with two characters to the equivalent country code with three characters.
            </summary>
            <param name="twoDigitCode">The two digit country code.</param>
            <returns>
            The result of the conversion or null if the conversion fails.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="twoDigitCode"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="twoDigitCode"/> is empty or contains only whitespaces.
            - or -
            <paramref name="twoDigitCode"/> has not a length of two.
            </exception>
        </member>
        <member name="M:GP.Utils.Globalization.CountryCodeMapping.ToTwoDigitsCode(System.String)">
            <summary>
            Converts a country code with three characters to the equivalent country code with two characters.
            </summary>
            <param name="threeDigitCode">The three digit country code.</param>
            <returns>
            The result of the conversion or null if the conversion fails.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="threeDigitCode"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="threeDigitCode"/> is empty or contains only whitespaces.
            - or -
            <paramref name="threeDigitCode"/> has not a length of two.
            </exception>
        </member>
        <member name="T:GP.Utils.Globalization.CultureAndLanguages">
            <summary>
            Provides the parsed culture and languages.
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CultureAndLanguages.Languages">
            <summary>
            The languages from the header.
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CultureAndLanguages.Culture">
            <summary>
            The culture from the culture.
            </summary>
        </member>
        <member name="M:GP.Utils.Globalization.CultureAndLanguages.#ctor(System.Globalization.CultureInfo,GP.Utils.Globalization.Languages)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Globalization.CultureAndLanguages"/> class with the culture and languages.
            </summary>
            <param name="culture">The culture. Cannot be null.</param>
            <param name="languages">The language. Cannot be null</param>
        </member>
        <member name="T:GP.Utils.Globalization.CultureInfoExtensions">
            <summary>
            Extensions for CultureInfo
            </summary>
        </member>
        <member name="M:GP.Utils.Globalization.CultureInfoExtensions.ToTwoLetterIsoLanguageCode(System.String)">
            <summary>
            Resolves the LanguageName from the culture iso code
            </summary>
            <param name="cultureCode"></param>
            <returns></returns>
        </member>
        <member name="T:GP.Utils.Globalization.CurrencyInfo">
            <summary>
            Provides information about a specific culture.
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ETB">
            <summary>
            Defines the currency for Ethiopian Birr (Ethiopian Birr).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ZAR">
            <summary>
            Defines the currency for South African Rand (Suid-Afrikaanse rand).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.AED">
            <summary>
            Defines the currency for United Arab Emirates Dirham (درهم اماراتي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BHD">
            <summary>
            Defines the currency for Bahraini Dinar (دينار بحريني).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.DZD">
            <summary>
            Defines the currency for Algerian Dinar (دينار جزائري).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.EGP">
            <summary>
            Defines the currency for Egyptian Pound (جنيه مصري).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.IQD">
            <summary>
            Defines the currency for Iraqi Dinar (دينار عراقي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.JOD">
            <summary>
            Defines the currency for Jordanian Dinar (دينار اردني).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KWD">
            <summary>
            Defines the currency for Kuwaiti Dinar (دينار كويتي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.LBP">
            <summary>
            Defines the currency for Lebanese Pound (ليرة لبناني).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.LYD">
            <summary>
            Defines the currency for Libyan Dinar (دينار ليبي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MAD">
            <summary>
            Defines the currency for Moroccan Dirham (درهم مغربي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.OMR">
            <summary>
            Defines the currency for Omani Rial (ريال عماني).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.QAR">
            <summary>
            Defines the currency for Qatari Rial (ريال قطري).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.SAR">
            <summary>
            Defines the currency for Saudi Riyal (ريال سعودي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.SYP">
            <summary>
            Defines the currency for Syrian Pound (ليرة سوري).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TND">
            <summary>
            Defines the currency for Tunisian Dinar (دينار تونسي).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.YER">
            <summary>
            Defines the currency for Yemeni Rial (ريال يمني).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CLP">
            <summary>
            Defines the currency for Chilean Peso (Peso).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.INR">
            <summary>
            Defines the currency for Indian Rupee (টকা).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.AZN">
            <summary>
            Defines the currency for Azerbaijani Manat (Aзәрбајҹан манаты).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.RUB">
            <summary>
            Defines the currency for Russian Ruble (һум).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BYR">
            <summary>
            Defines the currency for Belarusian Ruble (беларускі рубель).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BGN">
            <summary>
            Defines the currency for Bulgarian Lev (български лев).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.NGN">
            <summary>
            Defines the currency for Nigerian Naira (Nigerian Naira).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BDT">
            <summary>
            Defines the currency for Bangladeshi Taka (টাকা).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CNY">
            <summary>
            Defines the currency for Chinese Yuan (མི་དམངས་ཤོག་སྒོཪ།).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.EUR">
            <summary>
            Defines the currency for Euro (euro).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BAM">
            <summary>
            Defines the currency for Bosnia-Herzegovina Convertible Mark (конвертибилна марка).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.USD">
            <summary>
            Defines the currency for US Dollar (US Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CZK">
            <summary>
            Defines the currency for Czech Republic Koruna (česká koruna).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.GBP">
            <summary>
            Defines the currency for UK Pound Sterling (Punt Prydain).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.DKK">
            <summary>
            Defines the currency for Danish Krone (Dansk krone).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CHF">
            <summary>
            Defines the currency for Swiss Franc (Schweizer Franken).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MVR">
            <summary>
            Defines the currency for Rufiyaa (ރުފިޔާ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BTN">
            <summary>
            Defines the currency for Bhutanese Ngultrum (དངུལ་ཀྲམ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.XCD">
            <summary>
            Defines the currency for Eastern Caribbean Dollar (Eastern Caribbean Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.AUD">
            <summary>
            Defines the currency for Australian Dollar (Australian Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BZD">
            <summary>
            Defines the currency for Belize Dollar (Belize Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CAD">
            <summary>
            Defines the currency for Canadian Dollar (Canadian Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.HKD">
            <summary>
            Defines the currency for Hong Kong Dollar (Hong Kong Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.IDR">
            <summary>
            Defines the currency for Indonesian Rupiah (Rupiah).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.JMD">
            <summary>
            Defines the currency for Jamaican Dollar (Jamaican Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MYR">
            <summary>
            Defines the currency for Malaysian Ringgit (Ringgit Malaysia).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.NZD">
            <summary>
            Defines the currency for New Zealand Dollar (New Zealand Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PHP">
            <summary>
            Defines the currency for Philippine Peso (Philippine Peso).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.SGD">
            <summary>
            Defines the currency for Singapore Dollar (Singapore Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TTD">
            <summary>
            Defines the currency for Trinidad and Tobago Dollar (Trinidad and Tobago Dollar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.XDR">
            <summary>
            Defines the currency for Special Drawing Rights (derechos especiales de giro).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ARS">
            <summary>
            Defines the currency for Argentine Peso (peso argentino).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BOB">
            <summary>
            Defines the currency for Bolivian Boliviano (boliviano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.COP">
            <summary>
            Defines the currency for Colombian Peso (peso colombiano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CRC">
            <summary>
            Defines the currency for Costa Rican Colón (colón costarricense).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CUP">
            <summary>
            Defines the currency for Cuban Peso (peso cubano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.DOP">
            <summary>
            Defines the currency for Dominican Peso (peso dominicano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.GTQ">
            <summary>
            Defines the currency for Guatemalan Quetzal (quetzal guatemalteco).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.HNL">
            <summary>
            Defines the currency for Honduran Lempira (lempira hondureño).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MXN">
            <summary>
            Defines the currency for Mexican Peso (Peso).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.NIO">
            <summary>
            Defines the currency for Nicaraguan Córdoba (córdoba nicaragüense).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PAB">
            <summary>
            Defines the currency for Panamanian Balboa (balboa panameño).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PEN">
            <summary>
            Defines the currency for Peruvian Nuevo Sol (nuevo sol peruano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PYG">
            <summary>
            Defines the currency for Paraguayan Guarani (guaraní paraguayo).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.UYU">
            <summary>
            Defines the currency for Uruguayan Peso (peso uruguayo).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.VEF">
            <summary>
            Defines the currency for Venezuelan Bolívar Fuerte (bolívar venezolano).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.IRR">
            <summary>
            Defines the currency for Iranian Rial (ریال).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.XOF">
            <summary>
            Defines the currency for West African CFA Franc (CFA).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CDF">
            <summary>
            Defines the currency for Congolese Franc (franc congolais).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.XAF">
            <summary>
            Defines the currency for Central African CFA Franc (franc CFA (BEAC)).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.HTG">
            <summary>
            Defines the currency for Haitian Gourde (gourde haïtienne).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ILS">
            <summary>
            Defines the currency for Israeli New Shekel (שקל חדש).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.HRK">
            <summary>
            Defines the currency for Croatian Kuna (hrvatska kuna).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.HUF">
            <summary>
            Defines the currency for Hungarian Forint (magyar forint).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.AMD">
            <summary>
            Defines the currency for Armenian Dram (դրամ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ISK">
            <summary>
            Defines the currency for Icelandic Króna (Íslensk króna).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.JPY">
            <summary>
            Defines the currency for Japanese Yen (円).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.GEL">
            <summary>
            Defines the currency for Georgian Lari (ქართული ლარი).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KZT">
            <summary>
            Defines the currency for Kazakhstani Tenge (Қазақстан теңгесі).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KHR">
            <summary>
            Defines the currency for Cambodian Riel (x179Aៀល).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KRW">
            <summary>
            Defines the currency for South Korean Won (원).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KGS">
            <summary>
            Defines the currency for Kyrgystani Som (сом).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.LAK">
            <summary>
            Defines the currency for Laotian Kip (ລາວ ກີບ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MKD">
            <summary>
            Defines the currency for Macedonian Denar (Македонски денар).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MNT">
            <summary>
            Defines the currency for Mongolian Tugrik (төгрөг).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BND">
            <summary>
            Defines the currency for Brunei Dollar (Dolar Brunei).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MMK">
            <summary>
            Defines the currency for Myanmar Kyat (မြန်မာကျပ်).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.NOK">
            <summary>
            Defines the currency for Norwegian Krone (norske kroner).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.NPR">
            <summary>
            Defines the currency for Nepalese Rupee (रुपैयाँ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PKR">
            <summary>
            Defines the currency for Pakistani Rupee (روپيه).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.PLN">
            <summary>
            Defines the currency for Polish Zloty (złoty polski).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.AFN">
            <summary>
            Defines the currency for Afghani (افغانى).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BRL">
            <summary>
            Defines the currency for Brazilian Real (Real).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MDL">
            <summary>
            Defines the currency for Moldovan Leu (leu moldovenesc).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.RON">
            <summary>
            Defines the currency for Romanian Leu (leu românesc).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.RWF">
            <summary>
            Defines the currency for Rwandan Franc (Rwandan Franc).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.SEK">
            <summary>
            Defines the currency for Swedish Krona (ruvdnu).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.LKR">
            <summary>
            Defines the currency for Sri Lankan Rupee (ශ්‍රී ලංකා රුපියල).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.SOS">
            <summary>
            Defines the currency for Somali Shilling (Shilin soomaali).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ALL">
            <summary>
            Defines the currency for Albanian Lek (Leku shqiptar).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.RSD">
            <summary>
            Defines the currency for Serbian Dinar (динар).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.KES">
            <summary>
            Defines the currency for Kenyan Shilling (Shilingi ya Kenya).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TJS">
            <summary>
            Defines the currency for Tajikistani Somoni (Сомонӣ).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.THB">
            <summary>
            Defines the currency for Thai Baht (บาท).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ERN">
            <summary>
            Defines the currency for Eritrean Nakfa (Eritrean Nakfa).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TMT">
            <summary>
            Defines the currency for Turkmen manat (manat).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.BWP">
            <summary>
            Defines the currency for Botswanan Pula (Botswanan Pula).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TRY">
            <summary>
            Defines the currency for Turkish Lira (Türk Lirası).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.UAH">
            <summary>
            Defines the currency for Ukrainian Hryvnia (гривня).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.UZS">
            <summary>
            Defines the currency for Uzbekistani Som (Ўзбекистон сўм).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.VND">
            <summary>
            Defines the currency for Vietnamese Dong (Đồng).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.MOP">
            <summary>
            Defines the currency for Macanese Pataca (澳門幣).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.TWD">
            <summary>
            Defines the currency for New Taiwan Dollar (新台幣).
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.Currencies">
            <summary>
            Gets the list of all available currencies.
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CurrentContainer">
            <summary>
            Gets or sets the <see cref="T:GP.Utils.Globalization.ICurrentCurrencyContainer"/> that stores the <see cref="P:CurrentCurrency"/> instance.
            </summary>
            <value>
            The <see cref="T:GP.Utils.Globalization.ICurrentCurrencyContainer"/> that stores the <see cref="P:CurrentCurrency"/> instance.
            </value>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.CurrentCurrency">
            <summary>
             Gets the <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> object that represents the culture provided by the current <see cref="T:GP.Utils.Globalization.ICurrentCurrencyContainer"/>.
            </summary>
            <value>
            The <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> object that represents the culture provided by the current <see cref="T:GP.Utils.Globalization.ICurrentCurrencyContainer"/>.
            </value>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.EnglishName">
            <summary>
            Gets the english name of the currency.
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.ISOSymbol">
            <summary>
            Gets the ISO symbol of the currency (EUR)
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.CurrencyInfo.Symbol">
            <summary>
            Gets the symbol of the currency (€).
            </summary>
        </member>
        <member name="E:GP.Utils.Globalization.CurrencyInfo.CurrentCurrencyContainerChanged">
            <summary>
            Occurs after the current currency container has changed
            </summary>
        </member>
        <member name="E:GP.Utils.Globalization.CurrencyInfo.CurentChanged">
            <summary>
            Occurs after the current Currency has changed
            </summary>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> class with serialized.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.GetCurrencyByISOName(System.String)">
            <summary>
            Retrieves a cached, readonly instance of a currency info by using the ISO symbol.
            </summary>
            <param name="isoSymbol">ISO symbol for which a currency is retrieved. Cannot be null.</param>
            <returns>
            A readonly <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> instance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="isoSymbol"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="isoSymbol"/> is empty or contains only whitespaces.</exception>
            <exception cref="T:System.NotSupportedException">The currency is not supported.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.GetCurrencyInfoByCulture(System.Globalization.CultureInfo)">
            <summary>
            Retrieves a cached, readonly instance of a currency info by using the specified culture.
            </summary>
            <param name="culture">Culture for which a currency is retrieved. Cannot be null.</param>
            <returns>
            A readonly <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> instance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.GetCurrencyInfoByRegion(System.Globalization.RegionInfo)">
            <summary>
            Retrieves a cached, readonly instance of a currency info by using the specified region.
            </summary>
            <param name="region">Region for which a currency is retrieved. Cannot be null.</param>
            <returns>
            A readonly <see cref="T:GP.Utils.Globalization.CurrencyInfo"/> instance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="region"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.IsKnownIsoSymbol(System.String)">
            <summary>
            Indicates wether the given isosymbol is known
            </summary>
            <param name="isoSymbol"></param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.CanConvertMoneyTo(GP.Utils.Globalization.CurrencyInfo)">
            <summary>
            Check if the currency can be converted to the target currency.
            </summary>
            <param name="targetCurrency">The currency to which it should be converted. Cannot be null.</param>
            <returns>Numerical value expressed in the <paramref name="targetCurrency"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="targetCurrency"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.ConvertMoney(System.Double,GP.Utils.Globalization.CurrencyInfo)">
            <summary>
            Converts the money to the target currency.
            </summary>
            <param name="value">Amount in the currency of this instance.</param>
            <param name="targetCurrency">The currency to which it should be converted. Cannot be null.</param>
            <returns>Numerical value expressed in the <paramref name="targetCurrency"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="targetCurrency"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.ConvertMoney(System.Double,GP.Utils.Globalization.CurrencyInfo,System.Boolean@)">
            <summary>
            Converts the money to the target currency.
            </summary>
            <param name="value">Amount in the currency of this instance.</param>
            <param name="targetCurrency">The currency to which it should be converted. Cannot be null.</param>
            <param name="wasConverted">Indicates wether the numerical value has been converted.</param>
            <returns>Numerical value expressed in the <paramref name="targetCurrency"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="targetCurrency"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.Equals(GP.Utils.Globalization.CurrencyInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.CurrencyInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:GP.Utils.Globalization.ICurrentLanguagesContainer">
            <summary>
            Contract der die Current Languages zurückliefert
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.ICurrentLanguagesContainer.Current">
            <summary>
            Provides read and write access to the current Languages.
            </summary>
        </member>
        <member name="T:GP.Utils.Globalization.Language">
            <summary>
            Represents a supported language.
            </summary>
        </member>
        <member name="M:GP.Utils.Globalization.Language.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Globalization.Language"/> class.
            </summary>
            <param name="languageCode">The language code.</param>
            <exception cref="T:System.Globalization.CultureNotFoundException">The language code is not valid.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.Language.op_Implicit(GP.Utils.Globalization.Language)~System.String">
            <summary>
            Converts the language to a string with an implicit conversion.
            </summary>
            <param name="language">The language.</param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Language.op_Implicit(System.String)~GP.Utils.Globalization.Language">
            <summary>
            Converts the string to a language with an implicit conversion.
            </summary>
            <param name="language">The language.</param>
            <returns>
            The language.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Language.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Language.Equals(GP.Utils.Globalization.Language)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GP.Utils.Globalization.Language.Equals(System.String)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GP.Utils.Globalization.Language.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Language.ToCultureInfo">
            <summary>
            Converts the language to a culture.
            </summary>
            <returns>
            The converted culture.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Language.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:GP.Utils.Globalization.Languages">
            <summary>
            Represents a collection of languages.
            </summary>
        </member>
        <member name="E:GP.Utils.Globalization.Languages.CurrentLanguagesContainerChanged">
            <summary>
            Occurs after the current languages container has changed
            </summary>
        </member>
        <member name="E:GP.Utils.Globalization.Languages.CurentChanged">
            <summary>
            Occurs after the current languages has changed
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.CurrentContainer">
            <summary>
            Gets or sets the <see cref="T:GP.Utils.Globalization.ICurrentLanguagesContainer"/> that stores the <see cref="P:CurrentLanguages"/> instance.
            </summary>
            <value>
            The <see cref="T:GP.Utils.Globalization.ICurrentLanguagesContainer"/> that stores the <see cref="P:CurrentLanguages"/> instance.
            </value>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.CurrentLanguages">
            <summary>
             Gets the <see cref="T:GP.Utils.Globalization.Languages"/> object that represents the culture provided by the current <see cref="T:GP.Utils.Globalization.ICurrentLanguagesContainer"/>.
            </summary>
            <value>
            The <see cref="T:GP.Utils.Globalization.Languages"/> object that represents the culture provided by the current <see cref="T:GP.Utils.Globalization.ICurrentLanguagesContainer"/>.
            </value>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.IsEmpty">
            <summary>
            Gets a value indicating whether the languages is empty.
            </summary>
            <value>
            <c>true</c> if the languages is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.AllLanguages">
            <summary>
            Gets all global supported languages including the master language.
            </summary>
            <value>
            All global supported languages including the master language.
            </value>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.AlternativeLanguages">
            <summary>
            Gets all global alternative languages not including the master language.
            </summary>
            <value>
            All global alternative languages not including the master language.
            </value>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.MasterLanguage">
            <summary>
            Gets the global master language.
            </summary>
            <value>
            The global master language.
            </value>
        </member>
        <member name="M:GP.Utils.Globalization.Languages.ParseCultureAndLanguages(System.String)">
            <summary>
            Parses the specified language string.
            </summary>
            <param name="acceptLanguage">The language string.</param>
            <returns>
            The list of languages.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Languages.#ctor(GP.Utils.Globalization.Language[])">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Globalization.Languages"/> class with the languages.
            </summary>
            <param name="languages">The languages. Cannot be null and must have at least one element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="languages"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="languages"/> is empty.</exception>
        </member>
        <member name="M:GP.Utils.Globalization.Languages.Supporting(GP.Utils.Globalization.Language,GP.Utils.Globalization.Language[])">
            <summary>
            Configures the supported languages.
            </summary>
            <param name="master">The master language. Cannot be null.</param>
            <param name="alternative">The alternative languages. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="master"/> is null.
            - or -
            <paramref name="alternative"/> is null.
            </exception>
        </member>
        <member name="P:GP.Utils.Globalization.Languages.Count">
            <summary>
            Gets the number of languages in the collection.
            </summary>
            <value>
            The number of languages in the collection.
            </value>
        </member>
        <member name="M:GP.Utils.Globalization.Languages.System#Collections#Generic#IEnumerable{GP#Utils#Globalization#Language}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GP.Utils.Globalization.Languages.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:GP.Utils.Globalization.CallContextGlobalizationContainer">
            <summary>
            Globalizeation container which uses the call context.
            </summary>
        </member>
        <member name="T:GP.Utils.Globalization.ICurrentCurrencyContainer">
            <summary>
            Contract der die Current Currency zurückliefert
            </summary>
        </member>
        <member name="P:GP.Utils.Globalization.ICurrentCurrencyContainer.Current">
            <summary>
            Provides read and write access to the current currency.
            </summary>
        </member>
        <member name="T:GP.Utils.Guard">
            <summary>
            A static class with a lot of helper methods, which guards
            a method agains invalid parameters.
            </summary>
        </member>
        <member name="M:GP.Utils.Guard.Between``1(``0,``0,``0,System.String)">
            <summary>
            Verifies that the specified value is between a lower and a upper value
            and throws an exception, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not between
            the lower and the upper value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.IsACollection``1(System.String,System.String)">
            <summary>
            Veriefies that the given Type is a collection.
            </summary>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception.</param>
            <typeparam name="T">The type to check.</typeparam>
        </member>
        <member name="M:GP.Utils.Guard.IsNotACollection``1(System.String,System.String)">
            <summary>
            Veriefies that the given Type is NOT a collection.
            </summary>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception.</param>
            <typeparam name="T">The type to check.</typeparam>
        </member>
        <member name="M:GP.Utils.Guard.Between``1(``0,``0,``0,System.String,System.String)">
            <summary>
            Verifies that the specified value is between a lower and a upper value
            and throws an exception with the passed message, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not between
            the lower and the upper value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.GreaterThan``1(``0,``0,System.String)">
            <summary>
            Verifies that the specified value is greater than a lower value
            and throws an exception, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.GreaterThan``1(``0,``0,System.String,System.String)">
            <summary>
            Verifies that the specified value is greater than a lower value
            and throws an exception with the passed message, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.GreaterEquals``1(``0,``0,System.String)">
            <summary>
            Verifies that the specified value is greater or equals than a lower value
            and throws an exception, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.GreaterEquals``1(``0,``0,System.String,System.String)">
            <summary>
            Verifies that the specified value is greater or equals than a lower value
            and throws an exception with the passed message, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="lower">The lower value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.LessThan``1(``0,``0,System.String)">
            <summary>
            Verifies that the specified value is less than a upper value
            and throws an exception, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.LessThan``1(``0,``0,System.String,System.String)">
            <summary>
            Verifies that the specified value is less than a upper value
            and throws an exception with the passed message, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.LessEquals``1(``0,``0,System.String)">
            <summary>
            Verifies that the specified value is less or equals than a upper value
            and throws an exception, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.LessEquals``1(``0,``0,System.String,System.String)">
            <summary>
            Verifies that the specified value is less or equals than a upper value
            and throws an exception with the passed message, if not.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="target">The target value, which should be validated.</param>
            <param name="upper">The upper value.</param>
            <param name="parameterName">Name of the parameter, which should will be checked.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is greater than
            the lower value.</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)">
            <summary>
            Verifies, that the collection method parameter with specified reference
            contains one or more elements and throws an exception
            if the object contains no elements.
            </summary>
            <typeparam name="TType">The type of the items in the collection.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="enumerable"/> is
            empty or contains only blanks.</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotEmpty``1(System.Collections.Generic.ICollection{``0},System.String,System.String)">
            <summary>
            Verifies, that the collection method parameter with specified reference
            contains one or more elements and throws an exception with
            the passed message if the object contains no elements.
            </summary>
            <typeparam name="TType">The type of the items in the collection.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="enumerable"/> is
            empty or contains only blanks.</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotNull(System.Object,System.String)">
            <summary>
            Verifies, that the method parameter with specified object value and message
            is not null and throws an exception if the object is null.
            </summary>
            <param name="target">The target object, which cannot be null.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotNull(System.Object,System.String,System.String)">
            <summary>
            Verifies, that the method parameter with specified object value and message
            is not null and throws an exception with the passed message if the object is null.
            </summary>
            <param name="target">The target object, which cannot be null.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotNullOrEmpty(System.String,System.String)">
            <summary>
            Verifies, that the string method parameter with specified object value and message
            is not null, not empty and does not contain only blanls and throws an exception
            if the object is null.
            </summary>
            <param name="target">The target string, which should be checked against being null or empty.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is
            empty or contains only blanks.</exception>
        </member>
        <member name="M:GP.Utils.Guard.NotNullOrEmpty(System.String,System.String,System.String)">
            <summary>
            Verifies, that the string method parameter with specified object value and message
            is not null, not empty and does not contain only blanls and throws an exception with
            the passed message if the object is null.
            </summary>
            <param name="target">The target string, which should be checked against being null or empty.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is
            empty or contains only blanks.</exception>
        </member>
        <member name="M:GP.Utils.Guard.ValidModel(System.Object,System.String)">
            <summary>
            Verifies, that the model is a valid model.
            </summary>
            <param name="target">The target object, which must be a valid model.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><paramref name="target"/> is
            not a valid model.</exception>
        </member>
        <member name="M:GP.Utils.Guard.IsType``1(System.Object,System.String)">
            <summary>
            Verfifies that the specified target has the right type.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="target">The target object, which cannot be null.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not of the specified type.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:GP.Utils.Guard.IsType``1(System.Object,System.String,System.String)">
            <summary>
            Verfifies that the specified target has the right type.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="target">The target object, which cannot be null.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="message">The message for the exception to throw.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not of the specified type.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:GP.Utils.Guard.IsType(System.Object,System.Type,System.String)">
            <summary>
            Verfifies that the specified target has the right type.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="target">The target object, which cannot be null.</param>
            <param name="expectedType">The expected type.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not of the specified type.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:GP.Utils.Guard.IsType(System.Object,System.Type,System.String,System.String)">
            <summary>
            Verfifies that the specified target has the right type.
            </summary>
            <param name="message">The message for the exception to throw.</param>
            <param name="target">The target object, which cannot be null.</param>
            <param name="expectedType">The expected type.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> is not of the specified type.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:GP.Utils.Guard.IsValidGeolocation(GP.Utils.Geolocation,System.String)">
            <summary>
            Verifies that the specified target is not null and has correct latitude and longitude values
            </summary>
            <param name="target">the geolocation which should be checked</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="target"/> has an invalid longitude or latitude.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.Guard.IsValidCurrencyIsoSymbol(System.String,System.String)">
            <summary>
            Verifies that the given iso currency symbol has a valid format (e.g. 3 digits).
            </summary>
            <param name="currencyIsoSymbol">CurrencyIsoSymbol (e.G. "EUR")</param>
            <param name="parameterName">name of the paremter</param>
        </member>
        <member name="M:GP.Utils.Guard.IsKnownCurrencyIsoSymbol(System.String,System.String)">
            <summary>
            Verifies that the given iso currency symbol has a valid format and is known (e.g. 3 digits).
            </summary>
            <param name="currencyIsoSymbol">CurrencyIsoSymbol (e.G. "EUR")</param>
            <param name="parameterName">name of the paremter</param>
        </member>
        <member name="T:GP.Utils.Hashs">
            <summary>
            Computes string hashes.
            </summary>
        </member>
        <member name="M:GP.Utils.Hashs.RandomSHA256(System.Boolean)">
            <summary>
            Computes a random SHA256.
            </summary>
            <param name="lower">if set to <c>true</c> the hash will be converted to lowercase.</param>
            <returns>
            The random hash.
            </returns>
        </member>
        <member name="M:GP.Utils.Hashs.RandomMD5(System.Boolean)">
            <summary>
            Computes a random MD5.
            </summary>
            <param name="lower">if set to <c>true</c> the hash will be converted to lowercase.</param>
            <returns>
            The random hash.
            </returns>
        </member>
        <member name="M:GP.Utils.Hashs.SHA256(System.String,System.Boolean)">
            <summary>
            Computes the SHA256 hash for the specified text.
            </summary>
            <param name="text">The text to calculate the hash for.</param>
            <param name="lower">if set to <c>true</c> the hash will be converted to lowercase.</param>
            <returns>
            The hash for the specified text or empty if the text is null, empty or whitespace.
            </returns>
        </member>
        <member name="M:GP.Utils.Hashs.MD5(System.String,System.Boolean)">
            <summary>
            Computes the MD5 hash for the specified text.
            </summary>
            <param name="text">The text to calculate the hash for.</param>
            <param name="lower">if set to <c>true</c> the hash will be converted to lowercase.</param>
            <returns>
            The hash for the specified text or empty if the text is null, empty or whitespace.
            </returns>
        </member>
        <member name="T:GP.Utils.IGroupable">
            <summary>
            Defines the interace for a groupable item.
            </summary>
        </member>
        <member name="P:GP.Utils.IGroupable.Name">
            <summary>
            Gets or sets the name of item.
            </summary>
        </member>
        <member name="P:GP.Utils.IGroupable.IsGroup">
            <summary>
            Gets or sets a value indicating whether the item is a group.
            </summary>
            <value>
              <c>true</c> if the item is a group.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:GP.Utils.IPagingResult">
            <summary>
            The paging result.
            </summary>
        </member>
        <member name="P:GP.Utils.IPagingResult.Total">
            <summary>
            Gets the total number of items.
            </summary>
            <remarks> Dont change the name, because the ajax libraries depend on it.</remarks>
        </member>
        <member name="P:GP.Utils.IPagingResult.PlainItems">
            <summary>
            Gets the plain items as raw objects.
            </summary>
            <value>The plain objects.</value>
        </member>
        <member name="P:GP.Utils.IPagingResult.TotalPages">
            <summary>
            Calculates the total number of pages.
            </summary>
            <returns>
            The total number of pages.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="P:GP.Utils.IPagingResult.LastItem">
            <summary>
            Calculates the last item.
            </summary>
            <returns>
            The last item.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="P:GP.Utils.IPagingResult.FirstItem">
            <summary>
            Calculates the first item.
            </summary>
            <returns>
            The first item.
            </returns>
        </member>
        <member name="P:GP.Utils.IPagingResult.PagingInfo">
            <summary>
            Gets or sets the current page index.
            </summary>
        </member>
        <member name="M:GP.Utils.IPagingResult.HasNext">
            <summary>
            Determines whether there is a next page
            </summary>
            <returns>
            <c>true</c> if there is a previous page; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="M:GP.Utils.IPagingResult.HasPrev">
            <summary>
            Determines whether there is a previous page
            </summary>
            <returns>
            <c>true</c> if there is a previous page; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="T:GP.Utils.LimitedConcurrencyLevelTaskScheduler">
            <summary>
            Provides a task scheduler that ensures a maximum concurrency level while running on top of the thread pool. 
            </summary>
        </member>
        <member name="P:GP.Utils.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel">
            <summary>
            Indicates the maximum concurrency level this <see cref="T:System.Threading.Tasks.TaskScheduler" /> is able to support.
            </summary>
        </member>
        <member name="M:GP.Utils.LimitedConcurrencyLevelTaskScheduler.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.LimitedConcurrencyLevelTaskScheduler"/> class with the specified degree of parallelism.  
            </summary>
            <param name="maxDegreeOfParallelism">The maximum degree of parallelism.</param>
        </member>
        <member name="M:GP.Utils.LimitedConcurrencyLevelTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>
            Queues a <see cref="T:System.Threading.Tasks.Task" /> to the scheduler.
            </summary>
            <param name="task">The <see cref="T:System.Threading.Tasks.Task" /> to be queued.</param>
        </member>
        <member name="M:GP.Utils.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>
            Determines whether the provided <see cref="T:System.Threading.Tasks.Task" /> can be executed synchronously in this call, and if it can, executes it.
            </summary>
            <param name="task">The <see cref="T:System.Threading.Tasks.Task" /> to be executed.</param>
            <param name="taskWasPreviouslyQueued">A Boolean denoting whether or not task has previously been queued. If this parameter is True, then the task may have been previously queued (scheduled); if False, then the task is known not to have been queued, and this call is being made in order to execute the task inline without queuing it.</param>
            <returns>
            A Boolean value indicating whether the task was executed inline.
            </returns>
        </member>
        <member name="M:GP.Utils.LimitedConcurrencyLevelTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <summary>
            Attempts to dequeue a <see cref="T:System.Threading.Tasks.Task" /> that was previously queued to this scheduler.
            </summary>
            <param name="task">The <see cref="T:System.Threading.Tasks.Task" /> to be dequeued.</param>
            <returns>
            A Boolean denoting whether the <paramref name="task" /> argument was successfully dequeued.
            </returns>
        </member>
        <member name="M:GP.Utils.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks">
            <summary>
            For debugger support only, generates an enumerable of <see cref="T:System.Threading.Tasks.Task" /> instances currently queued to the scheduler waiting to be executed.
            </summary>
            <returns>
            An enumerable that allows a debugger to traverse the tasks currently queued to this scheduler.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:GP.Utils.LocalizedString">
            <summary>
            Represents a localized string.
            </summary>
        </member>
        <member name="F:GP.Utils.LocalizedString.Empty">
            <summary>
            An empty instance of the localized string.
            </summary>
        </member>
        <member name="P:GP.Utils.LocalizedString.Size">
            <summary>
            Gets the size of the localized string.
            </summary>
            <value>
            The size of the localized string.
            </value>
        </member>
        <member name="P:GP.Utils.LocalizedString.IsEmpty">
            <summary>
            Gets a value indicating whether the localized string is empty.
            </summary>
            <value>
              <c>true</c> if the localized string is empty; otherwise, <c>false</c>.
            </value>
            <remarks>
            The localized string is empty, if it does not contain any strings.
            </remarks>
        </member>
        <member name="P:GP.Utils.LocalizedString.AllTexts">
            <summary>
            Gets all texts.
            </summary>
            <value>
            All texts.
            </value>
        </member>
        <member name="P:GP.Utils.LocalizedString.AllLanguageCodes">
            <summary>
            Gets all language codes.
            </summary>
            <value>
            All language codes.
            </value>
        </member>
        <member name="P:GP.Utils.LocalizedString.Item(System.String)">
            <summary>
            Gets the string by the specified language code and falls back to the master language if the value does not exist.
            </summary>
            <param name="languageCode">The language code.</param>
            <returns>
            The resulting value.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.LocalizedString"/> class with a single text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:GP.Utils.LocalizedString.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.LocalizedString"/> class with all strings.
            </summary>
            <param name="textsSet">The texts.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="textsSet"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Get(System.String)">
            <summary>
            Gets the string by the specified language code and falls back to the master language if the value does not exist.
            </summary>
            <param name="languageCode">The language code.</param>
            <returns>
            The resulting value.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.GetIfExists(System.String)">
            <summary>
            Gets the string by the specified language code if exists.
            </summary>
            <param name="languageCode">The language code.</param>
            <returns>
            The resulting value.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Get(System.String,System.String)">
            <summary>
            Gets the string by the specified language code and falls back to the master language if the value does not exist.
            </summary>
            <param name="languageCode">The language code.</param>
            <param name="masterLanguage">The master language.</param>
            <returns>
            The resulting value.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.ToLower(System.Globalization.CultureInfo)">
            <summary>
            Returns a copy of this string converted to lowercase.
            </summary>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            A string in lowercase.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.ToUpper(System.Globalization.CultureInfo)">
            <summary>
            Returns a copy of this string converted to lowercase.
            </summary>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            A string in lowercase.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.ToString(System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using the specified.
            </summary>
            <param name="culture">The culture. Cannot be null.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Select(System.Func{System.String,System.String})">
            <summary>
            Projects the strings to a new format using the specified selector.
            </summary>
            <param name="selector">The projector. Cannot be null.</param>
            <returns>
            The projected string.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="selector"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Add(System.String,System.String)">
            <summary>
            Adds this string with the languageCode and text and creates a new localized string.
            </summary>
            <param name="languageCode">The languageCode.</param>
            <param name="text">The text.</param>
            <returns>
            The new localized string.
            </returns>
            <exception cref="T:System.InvalidOperationException">Cannot applied to single strings.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Remove(System.String)">
            <summary>
            Removes this string with the languageCode and text and creates a new localized string.
            </summary>
            <param name="languageCode">The languageCode.</param>
            <returns>
            The new localized string.
            </returns>
            <exception cref="T:System.InvalidOperationException">Cannot applied to single strings.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.UrlSimplifyForSEO">
            <summary>
            Simplifies the string value so it can be used as a part of the url and is optimized for SEO.
            </summary>
            <returns>The converted string.</returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.ToDictionary(System.String[])">
            <summary>
            Converts the localized string not excluding the specified language codes.
            </summary>
            <param name="excluded">The excluded languages code.</param>
            <returns>
            The trimmed dictionary.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.op_Implicit(System.String)~GP.Utils.LocalizedString">
            <summary>
            Converts the text to a localized string.
            </summary>
            <param name="text">The text to convert.</param>
            <returns>
            The resulting localized string.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.op_Implicit(System.Collections.Generic.Dictionary{System.String,System.String})~GP.Utils.LocalizedString">
            <summary>
            Converts the dictionary of strings.
            </summary>
            <param name="texts">The texts.</param>
            <returns>
            The resulting localized string.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.op_Implicit(GP.Utils.LocalizedString)~System.String">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.InvalidOperationException">The localized string is empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizedString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.Equals(GP.Utils.LocalizedString)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.op_Inequality(GP.Utils.LocalizedString,GP.Utils.LocalizedString)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.LocalizedString"/> structure of equality.
            </summary>
            <param name="lhs">The <see cref="T:GP.Utils.LocalizedString"/> structure that is to the 
            left of the equality operator.</param>
            <param name="rhs">The <see cref="T:GP.Utils.LocalizedString"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.op_Equality(GP.Utils.LocalizedString,GP.Utils.LocalizedString)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.LocalizedString"/> structure of equality.
            </summary>
            <param name="lhs">The <see cref="T:GP.Utils.LocalizedString"/> structure that is to the 
            left of the equality operator.</param>
            <param name="rhs">The <see cref="T:GP.Utils.LocalizedString"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.LocalizedString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:GP.Utils.Mathematics.CollisionHelper">
            <summary>
            Static helper class to deal with collisions.
            </summary>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.Combine(System.Collections.Generic.IList{GP.Utils.Mathematics.Line},System.Double)">
            <summary>
            Unions the specified lines when two lines intersects.
            </summary>
            <param name="lines">The lines to union. Cannot be null.</param>
            <param name="failure">The failure value that is used when two double values are compared.</param>
            <returns>
            The list of combined lines. Will never be null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="lines"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.Combine(GP.Utils.Mathematics.Line,GP.Utils.Mathematics.Line,System.Double)">
            <summary>
            Combines two lines when they have the same direction and intersects.
            </summary>
            <param name="line1">The first line.</param>
            <param name="line2">The second line.</param>
            <param name="failure">The failure value that is used when two double values are compared.</param>
            <returns>The combined line, when they can be combined.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.Contains(GP.Utils.Mathematics.Vector2[],GP.Utils.Mathematics.Vector2)">
            <summary>
            Determines whether the polygon contains the specified point.
            </summary>
            <param name="polygon">The polygon.</param>
            <param name="point">The point that is inside or outside the polygon.</param>
            <returns>
            <c>true</c> if the polygon contains the specified point; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="polygon"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.Contains(GP.Utils.Mathematics.Vector2[],GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.PointPolygonCheck)">
            <summary>
            Determines whether the polygon contains the specified point.
            </summary>
            <param name="polygon">The polygon.</param>
            <param name="point">The point that is inside or outside the polygon.</param>
            <param name="pointOperation">determines how accurate and with which operation the check should be performed</param>
            <returns>
            <c>true</c> if the polygon contains the specified point; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="polygon"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.IsIntersecting(GP.Utils.Mathematics.Rectangle,GP.Utils.Mathematics.Rectangle)">
            <summary>
            Determines whether there is an intersection between both rectangles.
            </summary>
            <param name="rect1">Source rectangle.</param>
            <param name="rect2">Source rectangle.</param>
            <returns>
            <c>true</c> if the specified target rectangle is intersecting the other rectangle; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.IsIntersecting(GP.Utils.Mathematics.RotatedRect,GP.Utils.Mathematics.Line)">
            <summary>
            Determines whether the specified rotated rectangle is intersecting the line object.
            </summary>
            <param name="rect">The target rectangle for the intersection test. Cannot be null.</param>
            <param name="line">The target line for the intersection test.</param>
            <returns>
            <c>true</c> if the specified rotated rectangle is intersecting the line object; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="rect"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.IsIntersecting(GP.Utils.Mathematics.Vector2[],GP.Utils.Mathematics.Line)">
            <summary>
            Determines whether there is an intersection between the specified polygon and line.
            </summary>
            <param name="polygon">The target polygon. Cannot be null.</param>
            <param name="line">The target line.</param>
            <returns>
            <c>true</c> if there is an intersection between the specified polygon and line.; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="polygon"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.CollisionHelper.Intersects(GP.Utils.Mathematics.Line,GP.Utils.Mathematics.Line)">
            <summary>
            Determines whether there is an intersection between both lines and returns the intersection point.
            </summary>
            <param name="line1">Source line.</param>
            <param name="line2">Source line.</param>
            <returns>
            The intersection point if there is an intersection between both lines or null otherwise.
            </returns>
        </member>
        <member name="T:GP.Utils.Mathematics.Rectangle">
            <summary>
            Stores a set of four integers that represent the location and 
            size of a rectangle. 
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.Zero">
            <summary>
            Zero rectangle with no width and no height.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.Empty">
            <summary>
            Zero rectangle with no width and no height.
            </summary>
        </member>
        <member name="P:GP.Utils.Mathematics.Rectangle.Top">
            <summary>
            Gets the y-coordinate of the top edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The y-coordinate of the top edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Rectangle.Bottom">
            <summary>
            Gets the y-coordinate of the bottom edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The y-coordinate of the bottom edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Rectangle.Left">
            <summary>
            Gets the x-coordinate of the left edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The x-coordinate of the left edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Rectangle.Right">
            <summary>
            Gets the x-coordinate of the right edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The x-coordinate of the right edge of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Rectangle.IsEmpty">
            <summary>
            Gets a value indicating whether the rectangle is empty.
            </summary>
            <value>
            <c>true</c> if rectangle is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.Width">
            <summary>
            Gets or sets the width of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The width of this <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.Height">
            <summary>
            Gets or sets the height of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The width of this <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The x-coordinate of the upper-left corner 
            of this <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="F:GP.Utils.Mathematics.Rectangle.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this 
            <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.
            </summary>
            <value>The y-coordinate of the upper-left corner 
            of this <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure.</value>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.Rectangle"/> struct
            with the specified location and size.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.#ctor(GP.Utils.Mathematics.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.Rectangle"/> struct 
            from a <see cref="T:GP.Utils.Mathematics.Rectangle"/>
            </summary>
            <param name="other">The other rectangle.</param>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.ToPositiveRect">
            <summary>
            Converts this <see cref="T:GP.Utils.Mathematics.Rectangle"/> object to an instance of the <see cref="T:GP.Utils.Mathematics.Rectangle"/> class.
            </summary>
            <returns>The <see cref="T:GP.Utils.Mathematics.Rectangle"/> object as result of the conversion.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same 
            type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.Equals(GP.Utils.Mathematics.Rectangle)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the 
            <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.op_Equality(GP.Utils.Mathematics.Rectangle,GP.Utils.Mathematics.Rectangle)">
            <summary>
            Tests whether two <see cref="T:GP.Utils.Mathematics.Rectangle"/> structures have 
            equal location and size.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure that is to the 
            left of the equality operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure that is to the 
            right of the equality operator.</param>
            <returns>This operator returns true if the two <see cref="T:GP.Utils.Mathematics.Rectangle"/> structures 
            have equal X, Y, Width, and Height properties.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.op_Inequality(GP.Utils.Mathematics.Rectangle,GP.Utils.Mathematics.Rectangle)">
            <summary>
            Tests whether two <see cref="T:GP.Utils.Mathematics.Rectangle"/> structures differ
            in location or size.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure that is to the 
            left of the inequality  operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Rectangle"/> structure that is to the 
            right of the inequality  operator.</param>
            <returns>This operator returns true if any of the X, Y, Width or Height 
            properties of the two <see cref="T:GP.Utils.Mathematics.Rectangle"/> structures are unequal; otherwise false.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.IntersectsWith(GP.Utils.Mathematics.Rectangle)">
            <summary>Determines if this rectangle intersects with <paramref name="rect" />.</summary>
            <returns>This method returns true if there is any intersection, otherwise false.</returns>
            <param name="rect">The rectangle to test. </param>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.Contains(GP.Utils.Mathematics.Vector2)">
            <summary>
            Determines whether the rectangle contains the x and y position.
            </summary>
            <param name="vector">The vector.</param>
            <returns>
            True, if the rectangle contains the vector.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.Contains(System.Double,System.Double)">
            <summary>
            Determines whether the rectangle contains the x and y position.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            True, if the rectangle contains the x any x position.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Rectangle.Union(GP.Utils.Mathematics.Rectangle)">
            <summary>
            Expands the current rectangle exactly enough to contain the specified rectangle.
            </summary>
            <param name="rect">The rectangle to include.</param>
        </member>
        <member name="T:GP.Utils.Mathematics.DoubleUtil">
            <summary>
            A static helper class which provides some helper methods for working with 
            double values in a visual tree or any other scenario.
            </summary>
        </member>
        <member name="M:GP.Utils.Mathematics.DoubleUtil.AreClose(System.Double,System.Double,System.Double)">
            <summary>
            Identifies if two specified double values are very close together or
            have the same value.
            </summary>
            <param name="first">The first value for the comparison.</param>
            <param name="second">The second value for the comparsion.</param>
            <param name="failure">The failure factor.</param>
            <returns>
            Indicates if two values are close together or have the same value.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.DoubleUtil.AreClose(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Identifies if two specified <see cref="T:GP.Utils.Mathematics.Vector2"/> objects as pair of two double values are very close together or 
             close together or have the same value.
            </summary>
            <param name="first">The first value for the comparison.</param>
            <param name="second">The second value for the comparsion.</param>
            <param name="failure">The failure factor.</param>
            <returns>Indicates if two values are close together or have the same value.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.DoubleUtil.AreClose(System.Double,System.Double)">
            <summary>
            Identifies if two specified double values are very close together or 
            have the same value.
            </summary>
            <param name="first">The first value for the comparison.</param>
            <param name="second">The second value for the comparsion.</param>
            <returns>Indicates if two values are close together or have the same value.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.DoubleUtil.AreClose(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Identifies if two specified <see cref="T:GP.Utils.Mathematics.Vector2"/> objects as pair of two double values are very close together or 
             close together or have the same value.
            </summary>
            <param name="first">The first value for the comparison.</param>
            <param name="second">The second value for the comparsion.</param>
            <returns>Indicates if two values are close together or have the same value.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.DoubleUtil.RoundToMultipleOf(System.Double,System.Double)">
            <summary>
            Rounds the specified values to a multiple of the specified factor.
            </summary>
            <param name="value">The value to round.</param>
            <param name="factor">The factor which is used to round the value parameter.
            Must be greater than zero</param>
            <returns>The rounded value by the specified factor.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="factor"/> is greater than zero.</exception>
        </member>
        <member name="T:GP.Utils.Mathematics.Line">
            <summary>
            Represents a line between two points. 
            The direction of the line always goes from the first to the second point.
            </summary>
        </member>
        <member name="P:GP.Utils.Mathematics.Line.Center">
            <summary>
            Gets the center of the line.
            </summary>
            <value>The center of the line.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Line.Direction">
            <summary>
            Gets the direction of the line which is calculated by subtracting 
            the first point from the second point.
            </summary>
            <value>The direction of the line.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Line.Point1">
            <summary>
            Gets or sets the first point of the line.
            </summary>
            <value>The first point of the line.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Line.Point2">
            <summary>
            Gets or sets the second point of the line.
            </summary>
            <value>The second point of the line.</value>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.#ctor(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.Line"/> struct with 
            two <see cref="T:GP.Utils.Mathematics.Vector2"/> instances that represent the first and second point of the line.
            </summary>
            <param name="point1">The first point of the line.</param>
            <param name="point2">The second point of the line.</param>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.Length">
            <summary>
            Calculates the length of the line.
            </summary>
            <returns>The length of the line.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.LengthSquared">
            <summary>
            Calculates the length of the line squared.
            </summary>
            <returns>The length of the line squared.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.Extent">
            <summary>
            Calculates the extent of the line, which is half of the length.
            </summary>
            <returns>The extent of the line.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.Expand(GP.Utils.Mathematics.Line,System.Double)">
            <summary>
            Creates and expanded version of the specified line with the new specified length.
            </summary>
            <param name="line">The line to expand.</param>
            <param name="length">The length of the new line.</param>
            <returns>The expanded line.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.Equals(GP.Utils.Mathematics.Line)">
            <summary>
            Determiens whether two <see cref="T:GP.Utils.Mathematics.Line"/> objects are equals.
            </summary>
            <param name="other">The other <see cref="T:GP.Utils.Mathematics.Line"/> object.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.op_Equality(GP.Utils.Mathematics.Line,GP.Utils.Mathematics.Line)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.Mathematics.Line"/> structure of equality.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Line"/> structure that is to the 
            left of the equality operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Line"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Line.op_Inequality(GP.Utils.Mathematics.Line,GP.Utils.Mathematics.Line)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.Mathematics.Line"/> structure of inequality.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Line"/> structure that is to the 
            left of the equality operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Line"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:GP.Utils.Mathematics.MathExtensions">
            <summary>
            Provies a set of simple mathematical functions.
            </summary>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.NormalizeValue(System.Double,System.Double,System.Double)">
            <summary>
            Normalizes the value between zero and one dependending on the minimum an maximum value.
            </summary>
            <param name="value">The value to normalize.</param>
            <param name="min">The minimum allowed value.</param>
            <param name="max">The maximum allowed value.</param>
            <returns>
            The result of the normalization.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.UnionAllToSingle(System.Collections.Generic.IList{GP.Utils.Mathematics.Rectangle})">
            <summary>
            Calculates the bounding box that contains all specified rectangle.
            </summary>
            <param name="rectangles">The rectangle that should be a part of the resulting
            bounding box.</param>
            <returns>The bounding box that contains all rectangles.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="rectangles"/> cannot be null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.Union(System.Collections.Generic.IList{GP.Utils.Mathematics.Rectangle})">
            <summary>
            Unions the specified rectangles when two rectangles intersects.
            </summary>
            <param name="rectangles">The rectangles to union. Cannot be null.</param>
            <returns>The list of combined rectangles. Will never be null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="rectangles"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.UnionAll(System.Collections.Generic.IList{GP.Utils.Mathematics.Rectangle})">
            <summary>
            Unions all rectangles.
            </summary>
            <param name="rectangles">The rectangles.</param>
            <returns>
            The rectangles containing all others.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.ToRad(System.Double)">
            <summary>
            Converts an angle in degree to an angle in radian.
            </summary>
            <param name="degree">The angle in degree.</param>
            <returns>The angle in radian.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.ToDegree(System.Double)">
            <summary>
            Converts an angle in radian to an angle in degree.
            </summary>
            <param name="rad">The angle in radian.</param>
            <returns>The angle in degree.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.ToPositiveDegree(System.Double)">
            <summary>
            Converts an angle in radian to an angle in degree.
            </summary>
            <param name="rad">The angle in radian.</param>
            <returns>The angle in degree.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.GetAngleBetween(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Converts the angle between two vectors, represented by simple Vectors.
            </summary>
            <param name="point1">Source point.</param>
            <param name="point2">Source point.</param>
            <returns>The angle between two vectors.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.Rotate(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Rotates the specified position around the center point with the specified 
            rotation in radian.
            </summary>
            <param name="position">The position to rotate.</param>
            <param name="center">The center point.</param>
            <param name="radian">The rotation in radian.</param>
            <returns>The rotated position.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.Inflate(GP.Utils.Mathematics.Rectangle,System.Double)">
            <summary>
            Creates a rectangle that results from expanding or shrinking the specified rectangle by the 
            specified value in all directions. 
            </summary>
            <param name="rect">The Rect structure to modify.</param>
            <param name="value">The amount by which to expand or shrink the left, top, bottom and 
            right sides of the rectangle.</param>
            <returns>The resulting rectangle.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.MathExtensions.Inflate(GP.Utils.Mathematics.Rectangle,System.Double,System.Double)">
            <summary>
            Creates a rectangle that results from expanding or shrinking the specified rectangle by the 
            specified width and height amounts, in all directions. 
            </summary>
            <param name="rect">The Rect structure to modify.</param>
            <param name="x">The amount by which to expand or shrink the left and 
            right sides of the rectangle.</param>
            <param name="y">The amount by which to expand or shrink the top and 
            bottom sides of the rectangle. </param>
            <returns>The resulting rectangle.</returns>
        </member>
        <member name="T:GP.Utils.Mathematics.PointPolygonCheck">
            <summary>
            Enum is used to define how a inside-polygon-check should be performed
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.PointPolygonCheck.Default">
            <summary>
            The fastest way to check if a point is inside a polygon. Can return unexpected results at border points
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.PointPolygonCheck.IncludeBorder">
            <summary>
            All points on the border or very close to the border of the polygon are handled as if they were inside.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.PointPolygonCheck.ExcludeBorder">
            <summary>
            All points on the border or very close to the border of the polygon are handled as if they were outside.
            </summary>
        </member>
        <member name="T:GP.Utils.Mathematics.RotatedRect">
            <summary>
            Provides an rectangle that has position and size but also a rotation. The rectangle is readonly 
            and cannot be manipulated after it has been created.
            </summary>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.Axis">
            <summary>
            Gets the axis of the rotated rectangle as array with two elements where 
            the first element is the x-axis and the second element is the y-axis.
            </summary>
            <value>The axis of the rotated rectangle as array with two elements.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.Extent">
            <summary>
            Gets the extent of the rotated rectangle as array with two elements where 
            the first element is the extend in x direction and the second element the extend in y direction.
            </summary>
            <value>The extent of the rotated rectangle as array with two elements.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.Corners">
            <summary>
            Gets the corners of the rotated rectangle as array with four elements.
            </summary>
            <value>The corners of the rotated rectangle as array with four elements.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.Rotation">
            <summary>
            Gets the rotation of the rotated rectangle.
            </summary>
            <value>The rotation of the rotated rectangle.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.TopLeft">
            <summary>
            Gets the position of the top-left corner of the rotated rectangle.
            </summary>
            <value>the position of the top-left corner of the rotated rectangle.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.TopRight">
            <summary>
            Gets the position of the top-right corner of the rotated rectangle.
            </summary>
            <value>the position of the top-right corner of the rotated rectangle.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.BottomRight">
            <summary>
            Gets the position of the bottom-right corner of the rotated rectangle.
            </summary>
            <value>the position of the bottom-right corner of the rotated rectangle.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.BottomLeft">
            <summary>
            Gets the position of the bottom-left corner of the rotated rectangle.
            </summary>
            <value>the position of the bottom-left corner of the rotated rectangle.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.RotatedRect.Center">
            <summary>
            Gets the center of the oriented rectangle.
            </summary>
            <value>The center.</value>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.#ctor(GP.Utils.Mathematics.RotatedRect)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.RotatedRect"/> class with 
            another rectangle.
            </summary>
            <param name="rotatedRect">The source rectangle. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rotatedRect"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.#ctor(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.RotatedRect"/> class with 
            the new center, the size and the rotation of the rectangle.
            </summary>
            <param name="center">The center of the rectangle.</param>
            <param name="size">The size of the rectangle.</param>
            <param name="angle">The rotation of the rectangle as radian value.</param>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.Inflate(GP.Utils.Mathematics.RotatedRect,System.Double)">
            <summary>
            Creates a rectangle that results from expanding or shrinking the specified rectangle by the 
            specified value in all directions. 
            </summary>
            <param name="rect">The Rect structure to modify.</param>
            <param name="value">The amount by which to expand or shrink the left, top, bottom and 
            right sides of the rectangle.</param>
            <returns>The resulting rectangle.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.Inflate(GP.Utils.Mathematics.RotatedRect,System.Double,System.Double)">
            <summary>
            Creates a rectangle that results from expanding or shrinking the specified rectangle by the 
            specified width and height amounts, in all directions. 
            </summary>
            <param name="rect">The Rect structure to modify.</param>
            <param name="x">The amount by which to expand or shrink the left and 
            right sides of the rectangle.</param>
            <param name="y">The amount by which to expand or shrink the top and 
            bottom sides of the rectangle. </param>
            <returns>The resulting rectangle.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.ToPolygon">
            <summary>
            Converts the <see cref="T:GP.Utils.Mathematics.RotatedRect"/> object to a polygon that can be used for intersection tests.
            </summary>
            <returns>The resulting polygon.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.Equals(GP.Utils.Mathematics.RotatedRect)">
            <summary>
            Determiens whether two <see cref="T:GP.Utils.Mathematics.RotatedRect"/> objects are equals.
            </summary>
            <param name="other">The other <see cref="T:GP.Utils.Mathematics.RotatedRect"/> object.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.RotatedRect.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:GP.Utils.Mathematics.Vector2">
            <summary>
            Defines a vector with two components.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Vector2.One">
            <summary>
            Defines a <see cref="T:GP.Utils.Mathematics.Vector2"/> where all elements are one.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Vector2.Zero">
            <summary>
            Defines a <see cref="T:GP.Utils.Mathematics.Vector2"/> where all elements are zero.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Vector2.UnitX">
            <summary>
            Defines the unit <see cref="T:GP.Utils.Mathematics.Vector2"/> for the x-axis.
            </summary>
        </member>
        <member name="F:GP.Utils.Mathematics.Vector2.UnitY">
            <summary>
            Defines the unit <see cref="T:GP.Utils.Mathematics.Vector2"/> for the y-axis.
            </summary>
        </member>
        <member name="P:GP.Utils.Mathematics.Vector2.X">
            <summary>
            Gets or sets the x-component of the vector.
            </summary>
            <value>The x-component of the vector.</value>
        </member>
        <member name="P:GP.Utils.Mathematics.Vector2.Y">
            <summary>
            Gets or sets the y-component of the vector.
            </summary>
            <value>The y-component of the vector.</value>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.Vector2"/> struct with 
            two double values.
            </summary>
            <param name="x">Initial value for the x-component of the vector.</param>
            <param name="y">Initial value for the x-component of the vector.</param>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Mathematics.Vector2"/> struct.
            </summary>
            <param name="value">Value to initialize both components to.</param>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.LengthSquared">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Normalize">
            <summary>
            Turns the current vector into a unit vector. The result is a vector one unit in 
            length pointing in the same direction as the original vector.
            </summary>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Dot(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Calculates the dot product of two vectors. 
            If the two vectors are unit vectors, the dot product returns a double floating point 
            value between -1 and 1 that can be used to determine some properties of the
            angle between two vectors. For example, it can show whether the vectors are orthogonal,
            parallel, or have an acute or obtuse angle between them. 
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Normalize(GP.Utils.Mathematics.Vector2)">
            <summary>
            Creates a unit vector from the specified vector. 
            The result is a vector one unit in length pointing in the same direction as the original vector. 
            </summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Min(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">The source vector.</param>
            <param name="value2">The source vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Max(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Negate(GP.Utils.Mathematics.Vector2)">
            <summary>
            Returns a vector pointing in the opposite direction. 
            </summary>
            <param name="value">Source vector.</param>
            <returns>Vector pointing in the opposite direction.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Add(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Sum of the source vectors.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Subtract(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Subtracts a vector from a vector. 
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Multiply(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Multiply(GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="scaleFactor">The scale factor.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Divide(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Divides the components of a vector by the components of another vector. 
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Divide(GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Divides a vector by a scalar value. 
            </summary>
            <param name="value">Source vector.</param>
            <param name="divider">The divisor.</param>
            <returns>Result of the division.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_UnaryNegation(GP.Utils.Mathematics.Vector2)">
            <summary>
            Returns a vector pointing in the opposite direction. 
            </summary>
            <param name="value">Source vector.</param>
            <returns>Vector pointing in the opposite direction.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Addition(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Sum of the source vectors.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Subtraction(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Subtracts a vector from a vector. 
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Multiply(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Multiply(GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="scaleFactor">The scale factor.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Multiply(System.Double,GP.Utils.Mathematics.Vector2)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="scaleFactor">The scale factor.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Division(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Divides the components of a vector by the components of another vector. 
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Division(GP.Utils.Mathematics.Vector2,System.Double)">
            <summary>
            Divides a vector by a scalar value. 
            </summary>
            <param name="value">Source vector.</param>
            <param name="divider">The divisor.</param>
            <returns>Result of the division.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.Equals(GP.Utils.Mathematics.Vector2)">
            <summary>
            Determiens whether two <see cref="T:GP.Utils.Mathematics.Vector2"/> objects are equals.
            </summary>
            <param name="other">The other <see cref="T:GP.Utils.Mathematics.Vector2"/> object.</param>
            <returns>A flag indicating if the other object is equal to the current instance.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Equality(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.Mathematics.Vector2"/> structure of equality.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Vector2"/> structure that is to the 
            left of the equality operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Vector2"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.Mathematics.Vector2.op_Inequality(GP.Utils.Mathematics.Vector2,GP.Utils.Mathematics.Vector2)">
            <summary>
            Compares two instances of the <see cref="T:GP.Utils.Mathematics.Vector2"/> structure of inequality.
            </summary>
            <param name="value1">The <see cref="T:GP.Utils.Mathematics.Vector2"/> structure that is to the 
            left of the equality operator.</param>
            <param name="value2">The <see cref="T:GP.Utils.Mathematics.Vector2"/> structure that is to the 
            right of the equality operator.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:GP.Utils.MoneyConverter">
            <summary>
            Conversion money values from one currency to another.
            </summary>
        </member>
        <member name="M:GP.Utils.MoneyConverter.CanConvert(System.String,System.String)">
            <summary>
            Check if the it can convert from the source currency to the target currency.
            </summary>
            <param name="sourceCurrency">The source currency. Cannot be null or empty and must have 3 characters not including whitespaces at end or begin.</param>
            <param name="targetCurrency">The source currency. Cannot be null or empty and must have 3 characters not including whitespaces at end or begin.</param>
            <returns>
            True, if it can convert or false otherwise.
            </returns>
        </member>
        <member name="M:GP.Utils.MoneyConverter.Convert(System.Double,System.String,System.String)">
            <summary>
            Converts the specified value from the source currency to the target currency.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="sourceCurrency">The source currency. Cannot be null or empty and must have 3 characters not including whitespaces at end or begin.</param>
            <param name="targetCurrency">The source currency. Cannot be null or empty and must have 3 characters not including whitespaces at end or begin.</param>
            <returns>
            The result of the conversion.
            </returns>
            <exception cref="T:System.InvalidOperationException">Conversion factor not found.</exception>
        </member>
        <member name="T:GP.Utils.MultiLocalizationProvider">
            <summary>
            A localization provider that nested multiple providers.
            </summary>
        </member>
        <member name="M:GP.Utils.MultiLocalizationProvider.#ctor(GP.Utils.ILocalizationProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.MultiLocalizationProvider"/> class with providers.
            </summary>
            <param name="providers">The nested providers. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="providers"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="providers"/> is empty.</exception>
        </member>
        <member name="M:GP.Utils.MultiLocalizationProvider.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="culture">The culture.</param>
            <returns>
            The localized string with the specified key.
            </returns>
        </member>
        <member name="T:GP.Utils.NoopLocalizationProvider">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GP.Utils.NoopLocalizationProvider.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="culture">The culture.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> is null or empty.</exception>
        </member>
        <member name="T:GP.Utils.NumberExtensions">
            <summary>
            Extension emthods to deal with numbers.
            </summary>
        </member>
        <member name="M:GP.Utils.NumberExtensions.IsNumber(System.Double)">
            <summary>
            Determines whether the specified value is a valid number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>A flag indicating whether the specified value is a number.</returns>
        </member>
        <member name="M:GP.Utils.NumberExtensions.IsNumber(System.Single)">
            <summary>
            Determines whether the specified value is a valid number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>A flag indicating whether the specified value is a number.</returns>
        </member>
        <member name="M:GP.Utils.NumberExtensions.RemainBetween``1(``0,``0,``0)">
            <summary>
            Arranges the value, so that it is not greater than the high value and
            not lower than the low value and returns the result.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <param name="low">The lower value.</param>
            <param name="high">The higher value.</param>
            <returns>The arranged value.</returns>
            <remarks>If the specified lower value is greater than the higher value. The low value
            will be returned.</remarks>
        </member>
        <member name="M:GP.Utils.NumberExtensions.IsBetween``1(``0,``0,``0)">
            <summary>
            Determines whether the specified value is between two other
            values.
            </summary>
            <typeparam name="TValue">The type of the values to check.
            Must implement <see cref="T:System.IComparable"/>.</typeparam>
            <param name="value">The value which should be between the other values.</param>
            <param name="low">The lower value.</param>
            <param name="high">The higher value.</param>
            <returns>
            <c>true</c> if the specified value is between the other values; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GP.Utils.PagingInfo">
            <summary>
            Generic model for transmitting paging information.
            </summary>
        </member>
        <member name="P:GP.Utils.PagingInfo.Page">
            <summary>
            The index of the current page.
            </summary>
        </member>
        <member name="P:GP.Utils.PagingInfo.PageSize">
            <summary>
            The number of items in the page.
            </summary>
        </member>
        <member name="M:GP.Utils.PagingInfo.IsValid(GP.Utils.PagingInfo)">
            <summary>
            Determines whether the specified paging information is valid.
            </summary>
            <param name="paging">The paging information to validate.</param>
            <returns>
              <c>true</c> if the specified paging information is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.PagingInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.PagingInfo.Equals(GP.Utils.PagingInfo)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>
            The result of the equal comparison.
            </returns>
        </member>
        <member name="M:GP.Utils.PagingInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:GP.Utils.PagingInfoExtensions">
            <summary>
            Provides extension methods for paging.
            </summary>
        </member>
        <member name="M:GP.Utils.PagingInfoExtensions.Page``1(System.Linq.IQueryable{``0},GP.Utils.PagingInfo)">
            <summary>
            Gets the page from the data source specified by the page info.
            </summary>
            <typeparam name="T">The type of the data items.</typeparam>
            <param name="source">The source where to get the page from.</param>
            <param name="paging">The paging information. Cannot be null.</param>
            <returns>The resulting page.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="paging"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.PagingInfoExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},GP.Utils.PagingInfo)">
            <summary>
            Gets the page from the data source specified by the page info.
            </summary>
            <typeparam name="T">The type of the data items.</typeparam>
            <param name="source">The source where to get the page from.</param>
            <param name="paging">The paging information. Cannot be null.</param>
            <returns>The resulting page.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="paging"/> is null.</exception>
        </member>
        <member name="T:GP.Utils.PagingResult`1">
            <summary>
            Generic class to transport results that are used for paging.
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
        </member>
        <member name="P:GP.Utils.PagingResult`1.Total">
            <summary>
            Gets the total number of items.
            </summary>
            <remarks> Dont change the name, because the ajax libraries depend on it.</remarks>
        </member>
        <member name="P:GP.Utils.PagingResult`1.PagingInfo">
            <summary>
            Gets or sets the current page index.
            </summary>
        </member>
        <member name="P:GP.Utils.PagingResult`1.TotalPages">
            <summary>
            Calculates the total number of pages.
            </summary>
            <returns>
            The total number of pages.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="P:GP.Utils.PagingResult`1.LastItem">
            <summary>
            Calculates the last item.
            </summary>
            <returns>
            The last item.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="P:GP.Utils.PagingResult`1.FirstItem">
            <summary>
            Calculates the first item.
            </summary>
            <returns>
            The first item.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="P:GP.Utils.PagingResult`1.Items">
            <summary>
            The items in the current page.
            </summary>
            <remarks> Dont change the name, because the ajax libraries depend on it.</remarks>
        </member>
        <member name="P:GP.Utils.PagingResult`1.PlainItems">
            <summary>
            Gets the plain items as raw objects.
            </summary>
            <value>
            The plain objects.
            </value>
        </member>
        <member name="M:GP.Utils.PagingResult`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.PagingResult`1" /> class.
            </summary>
        </member>
        <member name="M:GP.Utils.PagingResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,GP.Utils.PagingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.PagingResult`1" /> class with the data and the total number of items.
            </summary>
            <param name="items">The date items. Cannot be null.</param>
            <param name="total">The total number of items.</param>
            <param name="pagingInfo">The paging information that has been used to construct this result set.</param>
            <exception cref="T:System.ArgumentNullException">items</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="items" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.#ctor(System.Collections.Generic.List{`0},System.Int32,GP.Utils.PagingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.PagingResult`1" /> class with the data and the total number of items.
            </summary>
            <param name="items">The date items. Cannot be null.</param>
            <param name="total">The total number of items.</param>
            <param name="pagingInfo">The paging information that has been used to construct this result set.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="items"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.#ctor(System.Collections.Generic.List{`0},GP.Utils.PagingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.PagingResult`1" /> class with the data and the total number of items.
            </summary>
            <param name="items">The date items. Cannot be null.</param>
            <param name="pagingInfo">The paging information that has been used to construct this result set.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="items"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.HasNext">
            <summary>
            Determines whether there is a next page
            </summary>
            <returns>
            <c>true</c> if there is a previous page; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.HasPrev">
            <summary>
            Determines whether there is a previous page
            </summary>
            <returns>
            <c>true</c> if there is a previous page; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Paging information not set.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.Convert``1(System.Func{`0,``0})">
            <summary>
            Converts the paging result to another format using the specified converter.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="converter">The converter. Cannot be null.</param>
            <returns>The converted paging result.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="converter"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.PagingResult`1.ShouldSerializeItems">
            <summary>
            Checks if the <see cref="P:Items"/> property should be serialized.
            </summary>
            <returns>True, if the <see cref="P:Items"/> property should be serialized, otherwise false.</returns>
        </member>
        <member name="M:GP.Utils.PagingResult`1.ShouldSerializePlainItems">
            <summary>
            Checks if the <see cref="P:PlainItems"/> property should be serialized.
            </summary>
            <returns>True, if the <see cref="P:PlainItems"/> property should be serialized, otherwise false.</returns>
        </member>
        <member name="M:GP.Utils.PagingResult`1.ShouldSerializePagingInfo">
            <summary>
            Checks if the <see cref="P:PagingInfo"/> property should be serialized.
            </summary>
            <returns>True, if the <see cref="P:PagingInfo"/> property should be serialized, otherwise false.</returns>
        </member>
        <member name="M:GP.Utils.PagingResult`1.ShouldSerializeTotal">
            <summary>
            Checks if the <see cref="P:Total"/> property should be serialized.
            </summary>
            <returns>True, if the <see cref="P:Total"/> property should be serialized, otherwise false.</returns>
        </member>
        <member name="T:GP.Utils.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErorInvalidFormat">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; has an invalid format..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorCompare">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; and &apos;{1}&apos; must be equal..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorCountryCode">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid iso country code..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorCreditcard">
            <summary>
              Looks up a localized string similar to {0} is not a valid creditcard number.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorFuture">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be in the future..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorInvalidMail">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be a valid mail address..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorInvalidUrl">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be a valid url..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorInvalidUrlName">
            <summary>
              Looks up a localized string similar to Name can only have lower letters and minus..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorMaximumLength">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must have less then {1} characters..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorMinimum">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be greater than {1}..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorMinimumLength">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must have between {2} and {1} characters..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorNoMasterLanguage">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; does not contain the master language..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorOption">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a chooseable option. Valid options are: {1}.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorPasswords">
            <summary>
              Looks up a localized string similar to Passwords must be equal..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorPhoneNumber">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid phone number..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorRange">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be between {1} and {2}..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorRequired">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is required..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.ErrorUnsupportedLanguage">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; contains the following unsupported languages: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayAllHallows">
            <summary>
              Looks up a localized string similar to Allerheiligen.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayAscensionDay">
            <summary>
              Looks up a localized string similar to Christ Himmelfahrt.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayAssumptionDay">
            <summary>
              Looks up a localized string similar to Mariä Himmelfahrt.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayChristmasDayFirst">
            <summary>
              Looks up a localized string similar to 1. Weihnachtstag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayChristmasDaySecond">
            <summary>
              Looks up a localized string similar to 2. Weihnachtstag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayCorpusChristi">
            <summary>
              Looks up a localized string similar to Fronleichnam.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayDayOfWorking">
            <summary>
              Looks up a localized string similar to Tag der Arbeit.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayEasterDay">
            <summary>
              Looks up a localized string similar to Ostersonntag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayEasterMonday">
            <summary>
              Looks up a localized string similar to Ostermonntag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayGoodFriday">
            <summary>
              Looks up a localized string similar to Karfreitag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayHolyThursday">
            <summary>
              Looks up a localized string similar to Gründonnerstag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayNewYear">
            <summary>
              Looks up a localized string similar to Neujahr.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayReformationDay">
            <summary>
              Looks up a localized string similar to Reformationstag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayThreeKings">
            <summary>
              Looks up a localized string similar to Heilige drei Könige.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayUnificationDay">
            <summary>
              Looks up a localized string similar to Tag der Deutschen Einheit.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayWhitmonday">
            <summary>
              Looks up a localized string similar to Pfingstmontag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.HolidayWhitsunday">
            <summary>
              Looks up a localized string similar to Pfingstsonntag.
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.MimeTypes">
             <summary>
               Looks up a localized string similar to 323;text/h323
            3g2;video/3gpp2
            3gp;video/3gpp
            3gp2;video/3gpp2
            3gpp;video/3gpp
            7z;application/x-7z-compressed
            aa;audio/audible
            AAC;audio/aac
            aaf;application/octet-stream
            aax;audio/vnd.audible.aax
            ac3;audio/ac3
            aca;application/octet-stream
            accda;application/msaccess.addin
            accdb;application/msaccess
            accdc;application/msaccess.cab
            accde;application/msaccess
            accdr;application/msaccess.runtime
            accdt;application/msaccess
            accdw;application/msaccess.webapplication
            accft;application/msaccess.ftempl [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.MinutesAgo">
            <summary>
              Looks up a localized string similar to vor {0} min..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.SecondsAgo">
            <summary>
              Looks up a localized string similar to vor {0} sec..
            </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.TimeZones">
             <summary>
               Looks up a localized string similar to Etc/GMT+12;Dateline Standard Time
            Etc/GMT+12;Dateline Standard Time
            Etc/GMT+11;UTC-11
            Pacific/Pago_Pago;UTC-11
            Pacific/Niue;UTC-11
            Pacific/Midway;UTC-11
            Etc/GMT+11;UTC-11
            Pacific/Honolulu;Hawaiian Standard Time
            Pacific/Rarotonga;Hawaiian Standard Time
            Pacific/Tahiti;Hawaiian Standard Time
            Pacific/Johnston;Hawaiian Standard Time
            Pacific/Honolulu;Hawaiian Standard Time
            Etc/GMT+10;Hawaiian Standard Time
            America/Anchorage;Alaskan Standard Time
            America/Anchorage;Alaskan Standard Time
            America/Junea [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:GP.Utils.Properties.Resources.Yesterday">
            <summary>
              Looks up a localized string similar to Gestern.
            </summary>
        </member>
        <member name="T:GP.Utils.ReflectionExtensions">
            <summary>
            Extension methods to deal with reflection.
            </summary>
        </member>
        <member name="M:GP.Utils.ReflectionExtensions.GetAllHierarchieTypes(System.Type)">
            <summary>
            Gets all type from the type hierarchie.
            </summary>
            <param name="type">The type.</param>
            <returns>
            The types from the hierarchie including interfaces and base types.vbvovL9OD9RZvPwJuZ2e
            </returns>
        </member>
        <member name="M:GP.Utils.ReflectionExtensions.GetBaseTypes(System.Type)">
            <summary>
            Gets the base types for the specified type.
            </summary>
            <param name="type">The type to get the base types.</param>
            <returns>
            The base types.
            </returns>
        </member>
        <member name="T:GP.Utils.Reflection.AssemblyExtensions">
            <summary>
            Extensions for reflection assembly related tasks.
            </summary>
        </member>
        <member name="M:GP.Utils.Reflection.AssemblyExtensions.GetPublicProperties(System.Type)">
            <summary>
            Gets the public properties for a type.
            </summary>
            <param name="type">The type to get the properties for.</param>
            <returns>
            The types.
            </returns>
        </member>
        <member name="M:GP.Utils.Reflection.AssemblyExtensions.IsAssemblyDebugBuild(System.String)">
            <summary>
            Determines wether an assembly was build in debug mode
            </summary>
            <param name="filepath">The filepath of the assembly.</param>
            <returns>
            True, if the assembly is build in debug model.
            </returns>
        </member>
        <member name="M:GP.Utils.Reflection.AssemblyExtensions.IsAssemblyDebugBuild(System.Reflection.Assembly)">
            <summary>
            Determines wether an assembly was build in debug mode
            </summary>
            <param name="assembly">The assembly to check.</param>
            <returns>
            True, if the assembly is build in debug model.
            </returns>
        </member>
        <member name="T:GP.Utils.Reflection.IPropertyAccessor">
            <summary>
            The IPropertyAccessor interface defines a property
            accessor.
            </summary>
        </member>
        <member name="M:GP.Utils.Reflection.IPropertyAccessor.Get(System.Object)">
            <summary>
            Gets the value stored in the property for
            the specified target.
            </summary>
            <param name="target">Object to retrieve the property from. Cannot be null.</param>
            <returns>
            Property value.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Reflection.IPropertyAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the property on. Cannot be null.</param>
            <param name="value">Property value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is null.</exception>
        </member>
        <member name="T:GP.Utils.Reflection.PropertiesTypeAccessor">
            <summary>
            Provides high performance access to all instance properties of a specified type.
            </summary>
        </member>
        <member name="P:GP.Utils.Reflection.PropertiesTypeAccessor.Properties">
            <summary>
            Gets the properties of the type.
            </summary>
            <value>
            The properties of the current type.
            </value>
        </member>
        <member name="M:GP.Utils.Reflection.PropertiesTypeAccessor.Create(System.Type)">
            <summary>
            Creates an property accessor for the specified target type.
            </summary>
            <param name="targetType">The target type to create the accessor for. Cannot be null.</param>
            <returns>
            The created accessor for the properties of the specified type.
            </returns>
            <exception cref="T:System.ArgumentNullException">targetType</exception>
        </member>
        <member name="M:GP.Utils.Reflection.PropertiesTypeAccessor.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value for the property with the given name for the specified target object.
            </summary>
            <param name="target">The target object. Cannot be null.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The new value of the property. Cannot be null or empty.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="propertyName"/> is null or empty.</exception>
        </member>
        <member name="M:GP.Utils.Reflection.PropertiesTypeAccessor.GetValue(System.Object,System.String)">
            <summary>
            Gets the value for the property with the given name for the specified target object.
            </summary>
            <param name="target">The target object. Cannot be null.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>
            The value of the specified property.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> is null or empty.</exception>
        </member>
        <member name="T:GP.Utils.Reflection.PropertyAccessor">
            <summary>
            Fast property acccessor.
            </summary>
        </member>
        <member name="M:GP.Utils.Reflection.PropertyAccessor.#ctor(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Creates a new property accessor for the target type and the property info.
            </summary>
            <param name="targetType">Target object type. Cannot be null.</param>
            <param name="propertyInfo">Property info. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="targetType"/> is null.
            - or -
            <paramref name="propertyInfo"/> is null.
            </exception>
        </member>
        <member name="M:GP.Utils.Reflection.PropertyAccessor.Get(System.Object)">
            <summary>
            Gets the value stored in the property for
            the specified target.
            </summary>
            <param name="target">Object to retrieve the property from. Cannot be null.</param>
            <returns>
            Property value.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Reflection.PropertyAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the property on. Cannot be null.</param>
            <param name="value">Property value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/> is null.</exception>
        </member>
        <member name="T:GP.Utils.Reflection.SimpleMapper">
            <summary>
            Simple mapper from source to destination objects.
            </summary>
            <remarks>
            Properties will be mapped if they have the same name and the same type.
            </remarks>
        </member>
        <member name="M:GP.Utils.Reflection.SimpleMapper.Map``2(``0,``1)">
            <summary>
            Maps the properties from the source object to the destination object.
            </summary>
            <typeparam name="TSource">The type of the source object.</typeparam>
            <typeparam name="TDestination">The type of the destination object.</typeparam>
            <param name="source">The source object. Cannot be null.</param>
            <param name="destination">The destination object. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source" /> is null.
            - or -
            <paramref name="destination"/> is null.
            </exception>
            <remarks>
            Properties will be mapped if they have the same name and the same type.
            </remarks>
        </member>
        <member name="M:GP.Utils.Reflection.SimpleMapper.Map``2(``0,``1,System.Globalization.CultureInfo)">
            <summary>
            Maps the properties from the source object to the destination object.
            </summary>
            <typeparam name="TSource">The type of the source object.</typeparam>
            <typeparam name="TDestination">The type of the destination object.</typeparam>
            <param name="source">The source object. Cannot be null.</param>
            <param name="culture">The target culture.</param>
            <param name="destination">The destination object. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source" /> is null.
            - or -
            <paramref name="destination"/> is null.
            - or -
            <paramref name="culture"/> is null.
            </exception>
            <remarks>
            Properties will be mapped if they have the same name and the same type.
            </remarks>
        </member>
        <member name="T:GP.Utils.StringExtensions">
            <summary>
            Provides some extension methods.
            </summary>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToByteSizeString(System.Int64)">
            <summary>
            Converts the specified size in bytes to a string with the best matching unit.
            </summary>
            <param name="dataSize">Size of the file or data item.</param>
            <returns>
            A string with the best matching unit.
            </returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.JoinTrimmedWithWhiteSpace(System.String[])">
            <summary>
            Concatenates all the trimmed elements of a string array that are not null or empty,
            using a whitespace separator between each element.
            </summary>
            <param name="values">An array that contains the elements to concatenate.</param>
            <returns>A string that consists of the members of values delimited by the separator string.
            If values has no members, the method returns System.String.Empty.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.JoinTrimmedWithCommata(System.String[])">
            <summary>
            Concatenates all the trimmed elements of a string array that are not null or empty, 
            using a commata separator between each element.
            </summary>
            <param name="values">An array that contains the elements to concatenate.</param>
            <returns>A string that consists of the members of values delimited by the separator string. 
            If values has no members, the method returns System.String.Empty.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.JoinTrimmed(System.String,System.String[])">
            <summary>
            Concatenates all the trimmed elements of a string array that are not null or empty, 
            using the specified separator between each element. 
            </summary>
            <param name="separator">The string to use as a separator.</param>
            <param name="values">An array that contains the elements to concatenate.</param>
            <returns>A string that consists of the members of values delimited by the separator string. 
            If values has no members, the method returns System.String.Empty.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="separator"/> is null.
            - or -
            <paramref name="values"/> is null.
            </exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToDurationString(System.TimeSpan)">
            <summary>
            Converts the time span to a duration string.
            </summary>
            <param name="timeSpan">The timespan to convert.</param>
            <returns>The duration string.</returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToPriceString(System.Double)">
            <summary>
            Converts the price value to a string.
            </summary>
            <param name="price">The price value to convert to a string.</param>
            <returns>The price string.</returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToMinPriceString(System.Double)">
            <summary>
            Converts the price value to a string.
            </summary>
            <param name="price">The price value to convert to a string.</param>
            <returns>The price string.</returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToCorrectCasing(System.String)">
            <summary>
            Corrects the casing of the input string.
            </summary>
            <param name="input">The string to correct. Cannot be null</param>
            <returns>The string with corrected casing.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.TrimInnerAndOuterWhitespaces(System.String)">
            <summary>
            Trims all inner and outer whitespaces from the specified string.
            </summary>
            <param name="value">The string to trim.</param>
            <returns>
            The trimmed string.v
            </returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.SeparateByUpperLetters(System.String)">
            <summary>
            Separates the string by upper letters.
            </summary>
            <param name="value">The string to separate.</param>
            <returns>
            The separated string.
            </returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakePlural(System.String)">
            <summary>
            Converts a word to its plural equivalent.
            </summary>
            <param name="word">The word to convert. Cannot be null or empty.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is 
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakePluralPascalCase(System.String)">
            <summary>
            Converts the specified word to plural word in pascal case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakePluralCamelCase(System.String)">
            <summary>
            Converts the specified word to plural word in camel case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakeSingular(System.String)">
            <summary>
            Converts a word to its singular equivalent.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakeSingularPascalCase(System.String)">
            <summary>
            Converts the specified word to singular word in pascal case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.MakeSingularCamelCase(System.String)">
            <summary>
            Converts the specified word to singular word in camel case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToBeginLower(System.String)">
            <summary>
            Makes a word begin lower. All characters will
            be small letters.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToBeginUpper(System.String)">
            <summary>
            Makes a word begin upper. The first character will be 
            a capital letter, the following characters will be lower.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether the target string contains the value string using the specified comparison.
            </summary>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
            <param name="comparison">The comparison.</param>
            <returns>True, if the target string contains the value string using the specified comparison; otherwise false.</returns>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToPascalCase(System.String)">
            <summary>
            Converts the specified word pascal case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.ToCamelCase(System.String)">
            <summary>
            Converts the specified word in camel case. The
            word parts must be seperated by underscore.
            </summary>
            <param name="word">The word to convert.</param>
            <returns>The converted word.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="word"/> is
            null (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:GP.Utils.StringExtensions.Cut(System.String,System.Int32,System.String)">
            <summary>
            Cuts the specified string if the length is greater than the given maxLength
            and puts the prefix to the end.
            </summary>
            <param name="value">The string to cut. Cannot be null (Nothing in Vkaisual Basic).</param>
            <param name="maxLength">Length of the max.</param>
            <param name="prefix">The prefix.</param>
            <returns>The string to cut.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null (Nothing in Visual Basic).
            - or -
            <paramref name="prefix"/> is null (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="maxLength"/> is
            greater than zero.</exception>
        </member>
        <member name="T:GP.Utils.GermanHoliday">
            <summary>
            Represents a holiday, that means a special day like eastern or christmas.
            </summary>
        </member>
        <member name="P:GP.Utils.GermanHoliday.Date">
            <summary>
            Gets the date of this holiday.
            </summary>
            <value>
            The date of this holiday.
            </value>
        </member>
        <member name="P:GP.Utils.GermanHoliday.IsFix">
            <summary>
            Gets a value indicating if this holiday is fixed or depending on eastern.
            </summary>
            <value>
            A value indicating if this holiday is fixed or depending on eastern.
            </value>
        </member>
        <member name="P:GP.Utils.GermanHoliday.Name">
            <summary>
            Gets the name of the holiday in the language of the country.
            </summary>
            <value>
            The name of the holiday in the language of the country.
            </value>
        </member>
        <member name="M:GP.Utils.GermanHoliday.CalculateGermanHolidays(System.Int32)">
            <summary>
            Calculates the german holidays for the specified year.
            </summary>
            <param name="year">The year to calculate the holidays for.</param>
            <returns>The list of holidays.</returns>
            <remarks>The results are cached and is very performant.</remarks>
        </member>
        <member name="T:GP.Utils.RegexExtensions">
            <summary>
            Provides extensions to deal with regular expressions.
            </summary>
        </member>
        <member name="M:GP.Utils.RegexExtensions.Extract(System.Text.RegularExpressions.Regex,System.String,System.String)">
            <summary>
            Extracts the value of the group with the specified name from the first match.
            </summary>
            <param name="regex">The target regex where to extract the content from. Cannot be null.</param>
            <param name="input">The input to handle from the regular expression. Cannot be null.</param>
            <param name="namedGroup">The name of the group. Cannot be null or whitespace.</param>
            <returns>The value of the group with the specified name from the first match, when this group exists or null otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regex"/> is null.
            - or -
            <paramref name="namedGroup"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="namedGroup"/> is null or whitespace.</exception>
        </member>
        <member name="M:GP.Utils.RegexExtensions.Extracts(System.Text.RegularExpressions.Regex,System.String,System.String)">
            <summary>
            Extracts the valuse of the group with the specified name from all matchs.
            </summary>
            <param name="regex">The target regex where to extract the content from. Cannot be null.</param>
            <param name="input">The input to handle from the regular expression. Cannot be null.</param>
            <param name="namedGroup">The name of the group. Cannot be null or whitespace.</param>
            <returns>The values of the groups with the specified name from all matchs.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regex"/> is null.
            - or -
            <paramref name="namedGroup"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="namedGroup"/> is null or whitespace.</exception>
        </member>
        <member name="T:GP.Utils.TaskHelper">
            <summary>
            Provies some helper methods for tasks.
            </summary>
        </member>
        <member name="M:GP.Utils.TaskHelper.Forget(System.Threading.Tasks.Task)">
            <summary>
            Does nothing.
            </summary>
            <param name="task">The task to ignore.</param>
        </member>
        <member name="M:GP.Utils.TaskHelper.RunWithCurrentCulture(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a Task
            handle for that work and preserves the current culture.
            </summary>
            <param name="function">The work to execute asynchronously</param>
            <returns>
            The result type of the task.
            </returns>
            <exception cref="T:System.ArgumentNullException">The function parameter was null.</exception>
        </member>
        <member name="M:GP.Utils.TaskHelper.RunWithCurrentCulture(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a Task
            handle for that work and preserves the current culture.
            </summary>
            <param name="function">The work to execute asynchronously</param>
            <param name="cancellationToken">A cancellation token that should be used to cancel the work</param>
            <returns>
            The result type of the task.
            </returns>
            <exception cref="T:System.ArgumentNullException">The function parameter was null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Threading.CancellationTokenSource"/> associated with cancellationToken was disposed.</exception>
        </member>
        <member name="M:GP.Utils.TaskHelper.RunWithCurrentCulture``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a Task(TResult)
            handle for that work and preserves the current culture.
            </summary>
            <typeparam name="TResult">The type of the result returned by the proxy Task.</typeparam>
            <param name="function">The work to execute asynchronously</param>
            <returns>
            The result type of the task.
            </returns>
            <exception cref="T:System.ArgumentNullException">The function parameter was null.</exception>
        </member>
        <member name="M:GP.Utils.TaskHelper.RunWithCurrentCulture``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a Task(TResult)
            handle for that work and preserves the current culture.
            </summary>
            <typeparam name="TResult">The type of the result returned by the proxy Task.</typeparam>
            <param name="function">The work to execute asynchronously</param>
            <param name="cancellationToken">A cancellation token that should be used to cancel the work</param>
            <returns>
            The result type of the task.
            </returns>
            <exception cref="T:System.ArgumentNullException">The function parameter was null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Threading.CancellationTokenSource"/> associated with cancellationToken was disposed.</exception>
        </member>
        <member name="M:GP.Utils.TaskHelper.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a Task(TResult) handle for that work.
            </summary>
            <typeparam name="TResult">The result type of the task.</typeparam>
            <param name="function">The work to execute asynchronously. Cannot be null.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="scheduler">The scheduler. Cannot be null.</param>
            <returns>A Task(TResult) that represents the work queued to execute in the ThreadPool.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="function"/> is null.
            - or -
            <paramref name="scheduler"/> is null.
            </exception>
        </member>
        <member name="T:GP.Utils.ThreadingExtensions">
            <summary>
            Extensions to simplify parallel programming.
            </summary>
        </member>
        <member name="M:GP.Utils.ThreadingExtensions.DoWithReadLock``1(System.Threading.ReaderWriterLockSlim,System.Func{``0})">
            <summary>
            Executes the specified action within an acquired writer lock and returns the calculated result.
            </summary>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="readerWriterLock">The reader writer lock.</param>
            <param name="action">The action to execute. Cannot be null.</param>
            <returns>
            The result of the specified action.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.ThreadingExtensions.DoWithWriteLock(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Executes the specified action within an acquired writer lock.
            </summary>
            <param name="readerWriterLock">The reader writer lock.</param>
            <param name="action">The action to execute. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is null.</exception>
        </member>
        <member name="T:GP.Utils.Timeframe">
            <summary>
            Defines a frame between a start datetime and an end.
            </summary>
        </member>
        <member name="P:GP.Utils.Timeframe.Start">
            <summary>
            Gets or sets the start of the time frame.
            </summary>
            <value>The start of the time frame.</value>
        </member>
        <member name="P:GP.Utils.Timeframe.End">
            <summary>
            Gets or sets the end of the time frame.
            </summary>
            <value>The end of the time frame.</value>
        </member>
        <member name="P:GP.Utils.Timeframe.Kind">
            <summary>
            Gets or sets the kind of the time frame.
            </summary>
            <value>The kind of the time frame.</value>
        </member>
        <member name="M:GP.Utils.Timeframe.Contains(System.DateTime)">
            <summary>
            Determines whether the specified date time is within this time frame.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>
              <c>true</c> if the specified date time is within this time frame; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Timeframe.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Timeframe.Equals(GP.Utils.Timeframe)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:GP.Utils.Timeframe.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:GP.Utils.Timeframe.op_Equality(GP.Utils.Timeframe,GP.Utils.Timeframe)">
            <summary>
            Implements the equality operator.
            </summary>
            <param name="left">The left time frame.</param>
            <param name="right">The right time frame.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.Timeframe.op_Inequality(GP.Utils.Timeframe,GP.Utils.Timeframe)">
            <summary>
            Implements the inequality operator.
            </summary>
            <param name="left">The left time frame.</param>
            <param name="right">The right time frame.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GP.Utils.Timeframe.ProvideSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Gets the inner class schema.
            </summary>
            <param name="schemaSet">The schema set.</param>
            <returns>The qualified name.</returns>
        </member>
        <member name="M:GP.Utils.Timeframe.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, 
            you should return null (Nothing in Visual Basic) from this method, and instead, 
            if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the 
            object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:GP.Utils.Timeframe.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which 
            the object is deserialized.</param>
        </member>
        <member name="M:GP.Utils.Timeframe.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the 
            object is serialized.</param>
        </member>
        <member name="T:GP.Utils.TimeframeKind">
            <summary>
            Defines how the time frame is specified.
            </summary>
        </member>
        <member name="F:GP.Utils.TimeframeKind.Date">
            <summary>
            The begin and end are dates only.
            </summary>
        </member>
        <member name="F:GP.Utils.TimeframeKind.DateAndTime">
            <summary>
            The begin and end are dates and times.
            </summary>
        </member>
        <member name="F:GP.Utils.TimeframeKind.Time">
            <summary>
            The begin and end are times only.
            </summary>
        </member>
        <member name="T:GP.Utils.Timers.CompletionTimer">
            <summary>
            Represents a timer, where we can wait for completion of the current interval.
            </summary>
        </member>
        <member name="P:GP.Utils.Timers.CompletionTimer.IntervalInMs">
            <summary>
            Gets the interval in milliseconds.
            </summary>
            <value>
            The interval in milliseconds.
            </value>
        </member>
        <member name="P:GP.Utils.Timers.CompletionTimer.Interval">
            <summary>
            Gets the interval as <see cref="T:TimeSpan"/>.
            </summary>
            <value>
            The interval as <see cref="T:TimeSpan"/>.
            </value>
        </member>
        <member name="P:GP.Utils.Timers.CompletionTimer.IsRunning">
            <summary>
            Gets a value indicating whether the timer is running at the moment.
            </summary>
            <value>
              <c>true</c> if the timer is running at the moment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.#ctor(System.Int32,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Int32}},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Timers.CompletionTimer"/> class
            with the default delay between the iterations and the callback to invoke.
            </summary>
            <param name="interval">The interval in milliseconds. Must be greater than equals.</param>
            <param name="callback">The callback to invoke. Cannot be null.</param>
            <param name="startImmediatly">if set to <c>true</c> the timer starts immediatly.</param>
            <exception cref="T:System.ArgumentException"><paramref name="interval"/> is less or equals to zero.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callback"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.#ctor(System.Int32,System.Func{System.Threading.Tasks.Task{System.Int32}},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Timers.CompletionTimer"/> class
            with the default delay between the iterations and the callback to invoke.
            </summary>
            <param name="interval">The interval in milliseconds. Must be greater than equals.</param>
            <param name="callback">The callback to invoke. Cannot be null.</param>
            <param name="startImmediatly">if set to <c>true</c> the timer starts immediatly.</param>
            <exception cref="T:System.ArgumentException"><paramref name="interval"/> is less or equals to zero.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callback"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.#ctor(System.Int32,System.Func{System.Int32},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Timers.CompletionTimer" /> class
            with the default delay between the iterations and the callback to invoke.
            </summary>
            <param name="interval">The interval in milliseconds. Must be greater than equals.</param>
            <param name="callback">The callback to invoke. Cannot be null.</param>
            <param name="startImmediatly">if set to <c>true</c> the timer starts immediatly.</param>
            <exception cref="T:System.ArgumentException"><paramref name="interval" /> is less or equals to zero.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.#ctor(System.Int32,System.Func{System.Threading.CancellationToken,System.Int32},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.Timers.CompletionTimer" /> class
            with the default delay between the iterations and the callback to invoke.
            </summary>
            <param name="interval">The interval in milliseconds. Must be greater than equals.</param>
            <param name="callback">The callback to invoke. Cannot be null.</param>
            <param name="startImmediatly">if set to <c>true</c> the timer starts immediatly.</param>
            <exception cref="T:System.ArgumentException"><paramref name="interval" /> is less or equals to zero.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.DisposeObject(System.Boolean)">
            <summary>
            Releases unmanaged and optionally managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.StopAsync">
            <summary>
            Stops the timer asynchronously.
            </summary>
            <returns>
            The task for synchronization.
            </returns>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.StartAsync">
            <summary>
            Starts the time asynchronously.
            </summary>
            <returns>
            The task for synchronization.
            </returns>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.Trigger">
            <summary>
            Triggers the callback as soon as possible and returns the task for synchronization.
            </summary>
            <returns>
            The task for synchronization.
            </returns>
            <remarks>
            The timer will continue running if was running before the method was invoked.
            </remarks>
        </member>
        <member name="M:GP.Utils.Timers.CompletionTimer.TriggerAsync">
            <summary>
            Triggers the callback as soon as possible and returns the task for synchronization.
            </summary>
            <returns>
            The task for synchronization.
            </returns>
            <remarks>
            The timer will continue running if was running before the method was invoked.
            </remarks>
        </member>
        <member name="T:GP.Utils.TimeZoneHelper">
            <summary>
            Provides access to the time zone of the user.
            </summary>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToLocalUnixTimestamp(System.DateTimeOffset)">
            <summary>
            Converts the datetime to unix timestamps.
            </summary>
            <param name="dateTime">The datetime to convert.</param>
            <returns>
            The time stamp.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.UnixTimeStampToDateTime(System.Double)">
            <summary>
            Creates a datetime from unix time stamps.
            </summary>
            <param name="unixTimeStamp">The unix time stamp.</param>
            <returns>
            The created datetime.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToUnixTimestamp(System.DateTimeOffset)">
            <summary>
            Converts the datetime to unix timestamps.
            </summary>
            <param name="dateTime">The datetime to convert.</param>
            <returns>
            The time stamp.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToTimestamp(System.DateTimeOffset)">
            <summary>
            Converts the datetime to unix timestamps.
            </summary>
            <param name="dateTime">The datetime to convert.</param>
            <returns>
            The time stamp.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToUnixTimestamp(System.DateTime)">
            <summary>
            Converts the datetime to unix timestamps.
            </summary>
            <param name="dateTime">The datetime to convert.</param>
            <returns>
            The time stamp.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToTimestamp(System.DateTime)">
            <summary>
            Converts the datetime to unix timestamps.
            </summary>
            <param name="dateTime">The datetime to convert.</param>
            <returns>
            The time stamp.
            </returns>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToTimeZoneOffset(System.DateTimeOffset,System.TimeZoneInfo)">
            <summary>
            Converts the datetime to the specified time zone.
            </summary>
            <param name="dateTime">The date time to convert.</param>
            <param name="timeZone">The destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <remarks>
            This method only changes the offset, the Datetime itself is not affected.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="timeZone"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ToTimeZoneOffset(System.DateTimeOffset,System.String)">
            <summary>
            Converts the datetime to the specified time zone.
            </summary>
            <param name="dateTime">The date time to convert.</param>
            <param name="timeZoneName">The name of destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <remarks>
            This method only changes the offset, the Datetime itself is not affected.
            </remarks>
            <exception cref="T:System.ArgumentException">A time zone with the <paramref name="timeZoneName"/> doesnt exist.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ConvertFromUtc(System.DateTime,System.String)">
            <summary>
            Converts the utc datetime to the specified time zone.
            </summary>
            <param name="utc">The date time to convert.</param>
            <param name="timeZoneName">The name of destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <exception cref="T:System.ArgumentException">A time zone with the <paramref name="timeZoneName"/> doesnt exist.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ConvertFromUtc(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the utc datetime to the specified time zone.
            </summary>
            <param name="utc">The date time to convert.</param>
            <param name="timeZone">The destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="timeZone"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ConvertFromLocal(System.DateTime,System.String)">
            <summary>
            Converts the local datetime to the specified time zone.
            </summary>
            <param name="local">The date time to convert.</param>
            <param name="timeZoneName">The name of destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <exception cref="T:System.ArgumentException">A time zone with the <paramref name="timeZoneName"/> doesnt exist.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.ConvertFromLocal(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the local datetime to the specified time zone.
            </summary>
            <param name="local">The date time to convert.</param>
            <param name="timeZone">The destination time zone. Cannot be null.</param>
            <returns>
            The converted date time.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="timeZone"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.TimeZoneHelper.GetTimeZoneByZoneInfoId(System.String)">
            <summary>
            Gets the timezone by the zone info identifier.
            </summary>
            <param name="id">The zone info.</param>
            <returns>
            The timezone with the specified zone info id or the local timezone if not found.
            </returns>
        </member>
        <member name="T:GP.Utils.UserTimeZone">
            <summary>
            Provides access to the time zone of the user.
            </summary>
        </member>
        <member name="P:GP.Utils.UserTimeZone.TimeZoneProvider">
            <summary>
            Gets or sets the time zone provider.
            </summary>
            <value>
            The time zone provider.
            </value>
            <exception cref="T:System.ArgumentNullException">Time zone provider cannot be null.</exception>
        </member>
        <member name="M:GP.Utils.UserTimeZone.GetUtcOffset">
            <summary>
            An object that indicates the time difference between the current time zone's
            standard time and Coordinated Universal Time (UTC).
            </summary>
            <returns>An object that indicates the time difference between the current time zone's
            standard time and Coordinated Universal Time (UTC).</returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.FromUtcToUserTimeZone(System.Nullable{System.DateTime})">
            <summary>
            Converts a Coordinated Universal Time (UTC) to the time in the current time zone.
            </summary>
            <param name="utc">The Coordinated Universal Time (UTC).</param>
            <returns>The date and time in the destination time zone. Its System.DateTime.Kind
            property is System.DateTimeKind.Utc if destinationTimeZone is System.TimeZoneInfo.Utc;
            otherwise, its System.DateTime.Kind property is System.DateTimeKind.Unspecified.</returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.FromUtcToUserTimeZone(System.DateTime)">
            <summary>
            Converts a Coordinated Universal Time (UTC) to the time in the current time zone.
            </summary>
            <param name="utc">The Coordinated Universal Time (UTC).</param>
            <returns>The date and time in the destination time zone. Its System.DateTime.Kind
            property is System.DateTimeKind.Utc if destinationTimeZone is System.TimeZoneInfo.Utc;
            otherwise, its System.DateTime.Kind property is System.DateTimeKind.Unspecified.</returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.FromUserTimeZoneToUtc(System.Nullable{System.DateTime})">
            <summary>
            Converts the time in the user time zone to Coordinated Universal Time (UTC).
            </summary>
            <param name="local">The date and time to convert.</param>
            <returns>The Coordinated Universal Time (UTC) that corresponds to the dateTime parameter.
            The System.DateTime object's System.DateTime.Kind property is always set
            to System.DateTimeKind.Utc.</returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.FromUserTimeZoneToUtc(System.DateTime)">
            <summary>
            Converts the time in the user time zone to Coordinated Universal Time (UTC).
            </summary>
            <param name="local">The date and time to convert.</param>
            <returns>The Coordinated Universal Time (UTC) that corresponds to the dateTime parameter.
            The System.DateTime object's System.DateTime.Kind property is always set
            to System.DateTimeKind.Utc.</returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.ToUserTimeZoneString(System.DateTime,System.String)">
            <summary>
            Converts the datetime to the string representing a datetime in the time zone of the user.
            </summary>
            <param name="dateTime">The date time to convert.</param>
            <param name="format">A standard or custom date and time format string.</param>
            <returns>
            A string representation of value of the current System.DateTime object as specified by format and provider.
            </returns>
        </member>
        <member name="M:GP.Utils.UserTimeZone.ReadTimeZoneFromConfig">
            <summary>
            Reads the time zone from web or app configuration file.
            </summary>
            <returns>
            The timezone with the identifier from the web or app configuration file.
            </returns>
            <remarks>
            The timezone must be provied with the 'TimeZone' app setting.
            </remarks>
        </member>
        <member name="T:GP.Utils.ILocalizationProvider">
            <summary>
            Provides localized strings.
            </summary>
        </member>
        <member name="M:GP.Utils.ILocalizationProvider.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="culture">The culture.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> is null or empty.</exception>
        </member>
        <member name="T:GP.Utils.LocalizationManager">
            <summary>
            Provides access to localized resources.
            </summary>
        </member>
        <member name="P:GP.Utils.LocalizationManager.Provider">
            <summary>
            Gets or sets the current resource provider.
            </summary>
            <value>
            The current resource provider.
            </value>
        </member>
        <member name="M:GP.Utils.LocalizationManager.GetString(System.String)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <returns>The localized string with the specified key.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="key"/> is null or empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="culture">The culture.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> is null or empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.GetFormattedString(System.String,System.Object[])">
            <summary>
            Gets the formatted string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The localized string with the specified key.</returns>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.GetFormattedString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Gets the formatted string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <param name="culture">The culture.</param>
            <returns>The localized string with the specified key.</returns>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.TryGetString(System.String,System.String)">
            <summary>
            Tries to get the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="fallback">The fallback string that is used when no resource could be found.</param>
            <returns>The localized string with the specified key.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="key"/> is null or empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.TryGetString(System.Globalization.CultureInfo,System.String,System.String)">
            <summary>
            Tries to get the string with the specified key.
            </summary>
            <param name="culture">The culture.</param>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="fallback">The fallback string that is used when no resource could be found.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> is null or empty.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.TryGetFormattedString(System.String,System.Object[])">
            <summary>
            Tries to get the formatted string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The localized string with the specified key.</returns>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.TryGetFormattedString(System.String,System.String,System.Object[])">
            <summary>
            Tries to get the formatted string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="fallback">The fallback string that is used when no resource could be found.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationManager.TryGetFormattedString(System.Globalization.CultureInfo,System.String,System.String,System.Object[])">
            <summary>
            Tries to get the formatted string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="fallback">The fallback string that is used when no resource could be found.</param>
            <param name="culture">The culture.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.ArgumentException">Resource key cannot be null or empty.;key</exception>
            <exception cref="T:System.InvalidOperationException">Provider is not specified.</exception>
        </member>
        <member name="T:GP.Utils.LocalizationResourceProvider">
            <summary>
            Provides resources from a resource file.
            </summary>
        </member>
        <member name="M:GP.Utils.LocalizationResourceProvider.#ctor(System.Resources.ResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:GP.Utils.LocalizationResourceProvider"/> class with the resource manager.
            </summary>
            <param name="resourceManager">The resource manager. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="resourceManager"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.LocalizationResourceProvider.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the string with the specified key.
            </summary>
            <param name="key">The key to identity the resource. Cannot be null or empty.</param>
            <param name="culture">The culture code.</param>
            <returns>
            The localized string with the specified key.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> is null or empty.</exception>
        </member>
        <member name="T:GP.Utils.Web.UrlUtility">
            <summary>
            Converts string to use them in urls.
            </summary>
        </member>
        <member name="P:GP.Utils.Web.UrlUtility.SimplifyUrlExclude">
            <summary>
            Gets the default characters to exclude when simplifying an url.
            </summary>
            <value>
            The default characters to exclude when simplifying an url.
            </value>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.ConvertToLowerUrl(System.String,System.Boolean)">
            <summary>
            Converts the url to a lowercase representation by converting all single characters that are not part of a encoded
            special character to its lower representation.
            </summary>
            <param name="urlString">The URL string to convert. Will never be null or empty.</param>
            <param name="appendTrailingSlash">Appends the trailing slash when</param>
            <returns>The converted url string. Cannot be null or empty.</returns>
            <remarks>
            The default implementation is good enough, so never touch this method. Use <see cref="M:AdjustUrl" /> to make
            custom adjustments.
            </remarks>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.ToDictionary(System.Object)">
            <summary>
            Converts the anonymous object to and dictionary.
            </summary>
            <param name="data">The anonymous object to convert. Cannot be null.</param>
            <returns>The dictionary that contains all values of the anonymous object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="data" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.BuildUrlEncodedBody(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Builds the url encoded body from the parameters dictionary.
            </summary>
            <param name="parameters">The parameters dictionary that contains the parameters. Cannot be null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameters" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.BuildQueryString(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Builds a query string from the object where all readable properties are used.
            </summary>
            <param name="data">The data object where the query parameters are store. Cannot be null.</param>
            <param name="culture">The culture to convert the parameters. Cannot be null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.BuildQueryString(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo)">
            <summary>
            Builds the query string from the parameters dictionary.
            </summary>
            <param name="parameters">The parameters dictionary that contains the parameters. Cannot be null.</param>
            <param name="culture">The culture to convert the parameters. Cannot be null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.BuildQueryString(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Builds the query string from the parameters dictionary.
            </summary>
            <param name="parameters">The parameters dictionary that contains the parameters. Cannot be null.</param>
            <param name="keepEmpty">if set to <c>true</c> it keeps the empty parameters.</param>
            <param name="culture">The culture to convert the parameters. Cannot be null.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.BuildQueryString(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
            <summary>
            Builds the query string from the parameters dictionary.
            </summary>
            <param name="parameters">The parameters dictionary that contains the parameters. Cannot be null.</param>
            <param name="keepEmpty">if set to <c>true</c> it keeps the empty parameters.</param>
            <param name="culture">The culture to convert the parameters. Cannot be null.</param>
            <param name="preventUriEncode">Prevents that the url gets url encoded</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.IsValidUrlPart(System.String)">
            <summary>
            Determines whether the string value is a valid part of an url that is designed for search engine optimizations.
            </summary>
            <param name="value">The value.</param>
            <returns>
            <c>true</c> if the string value is a valid part of an url that is designed for search engine optimizations;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.HasOmittablePort(System.UriBuilder)">
            <summary>
            Determines wether the port of the uribuilder could be ommited
            </summary>
            <param name="builder">UriBuilder with the port and scheme which should be checked</param>
            <returns><c>true</c> if the port can be ommitted</returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.ToString(System.UriBuilder,System.Boolean)">
            <summary>
            Returns the uri as string
            </summary>
            <param name="builder">UriBuilder</param>
            <param name="sanitize">if <c>true</c> ommittable ports will be removed</param>
            <returns>uri string</returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.ToString(System.UriBuilder,System.Boolean,System.Boolean)">
            <summary>
            Returns the uri as string
            </summary>
            <param name="builder">UriBuilder</param>
            <param name="sanitize">if <c>true</c> ommittable ports will be removed</param>
            <param name="ensureTrailingSlash">if <c>true</c> a traling slash is ensured as long as there are no query parameters</param>
            <returns>uri string</returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.QueryString(System.Uri)">
            <summary>
            Gets the query string from the specified uri.
            </summary>
            <param name="uri">The uri to get the query string for.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.QueryString(System.UriBuilder)">
            <summary>
            Gets the query string from the specified uri.
            </summary>
            <param name="uriBuilder">The uri to get the query string for.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.Path(System.Uri)">
            <summary>
            Gets the path from the specified uri.
            </summary>
            <param name="uri">The uri to get the path for.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.Path(System.UriBuilder)">
            <summary>
            Gets the path from the specified uri.
            </summary>
            <param name="uriBuilder">The uri to get the path for.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.PathWithoutApplication(System.Uri,System.String)">
            <summary>
            Gets the path from the specified uri without the application path.
            </summary>
            <param name="uri">The uri to get the path for.</param>
            <param name="applicationPath">The application path.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.PathWithoutApplication(System.UriBuilder,System.String)">
            <summary>
            Gets the path from the specified uri without the application path.
            </summary>
            <param name="uriBuilder">The uri to get the path for.</param>
            <param name="applicationPath">The application path.</param>
            <returns>
            The resulting query string.
            </returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.EnsureTrailingSlash(System.String)">
            <summary>
            Ensures that the uri ends with a trailing slash
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.RemoveTrailingSlash(System.String)">
            <summary>
            Removes a trailign slash (if it exists)
            </summary>
            <param name="uri">the uri</param>
            <returns></returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.UrlSimplifyForSEO(System.String)">
            <summary>
            Simplifies the string value so it can be used as a part of the url and is optimized for SEO.
            </summary>
            <param name="value">The string to simplify.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.UrlSimplifyForSEO(System.String,System.Boolean)">
            <summary>
            Simplifies the string value so it can be used as a part of the url and is optimized for SEO.
            </summary>
            <param name="value">The string to simplify.</param>
            <param name="singleCharDiactric">Indicated, that the diacritics should be replaced with one character only, e.g. u no ue für ü.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.GetRouteValues(System.String)">
            <summary>
            Gets the route values from the specified string.
            </summary>
            <param name="value">The string to check. Cannot be null.</param>
            <returns>
            The resulting route values.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.UrlSimplifyForSEO(System.String,System.Collections.Generic.ISet{System.Char})">
            <summary>
            Simplifies the string value so it can be used as a part of the url and is optimized for SEO.
            </summary>
            <param name="value">The string to simplify.</param>
            <returns>The converted string.</returns>
            <param name="preserveHash">Characters that should be preserved when simplifying urls</param>
        </member>
        <member name="M:GP.Utils.Web.UrlUtility.UrlSimplifyForSEO(System.String,System.Collections.Generic.ISet{System.Char},System.Boolean)">
            <summary>
            Simplifies the string value so it can be used as a part of the url and is optimized for SEO.
            </summary>
            <param name="value">The string to simplify.</param>
            <param name="singleCharDiactric">The diactrics should be replaced only with a single char(search purposes)</param>
            <returns>The converted string.</returns>
            <param name="preserveHash">Characters that should be preserved when simplifying urls</param>
        </member>
        <member name="T:GP.Utils.XmlExtensions">
            <summary>
            Contains some helper methods for reading types from xml readers.
            </summary>
        </member>
        <member name="M:GP.Utils.XmlExtensions.ReadContentAsType(System.Xml.XmlReader)">
            <summary>
            Reads the text content at the current position as a <see cref="T:System.Type"/>.
            </summary>
            <param name="reader">The xml reader. Cannot be null.</param>
            <returns>The text content as <see cref="T:System.Type"/>. Will be never null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.ReadContentAsEnum``1(System.Xml.XmlReader)">
            <summary>
            Reads the text content at the current position as a enumeration value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="reader">The xml reader. Cannot be null.</param>
            <returns>
            The text content as enumeration value. Will be never null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.ReadContentAsInterface``1(System.Xml.XmlReader)">
            <summary>
            Reads the text content at the current position as a interface implementation with the type
            that is specified in the xml.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="reader">The xml reader. Cannot be null.</param>
            <returns>
            The text content as interface implementation. Will be never null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.ReadContentAsUri(System.Xml.XmlReader)">
            <summary>
            Reads the text content at the current position as uniform resource identifier.
            </summary>
            <param name="reader">The xml reader. Cannot be null.</param>
            <returns>The text content as uniform resource identifier.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.ReadContentAsGuid(System.Xml.XmlReader)">
            <summary>
            Reads the text content at the current position as global unique identifier.
            </summary>
            <param name="reader">The xml reader. Cannot be null.</param>
            <returns>The text content as global unique identifier.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.WriteExtendedValue(System.Xml.XmlWriter,System.Guid)">
            <summary>
            Writes the <see cref="T:System.Guid"/> value to the xml stream.
            </summary>
            <param name="writer">The target xml stream to write the value to. Cannot be null.</param>
            <param name="value">The <see cref="T:System.Guid"/> value to write to the xml stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.WriteElement``1(System.Xml.XmlWriter,System.String,``0)">
            <summary>
            Writes the xml element with the specified element name and the specified
            value to the stream.
            </summary>
            <typeparam name="T">The type o the value to write to the stream.</typeparam>
            <param name="writer">The target xml stream to write the element and value to. Cannot be null.</param>
            <param name="elementName">Name of the xml element. Cannot be null or empty.</param>
            <param name="value">The value to write to the xml stream.</param>
            <exception cref="T:System.ArgumentException"><paramref name="elementName"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:GP.Utils.XmlExtensions.To``1(System.Object)">
            <summary>
            Converts the target object to the specified type.
            </summary>
            <typeparam name="T">The type to convert the object to.</typeparam>
            <param name="target">The target object. Must be of same type like the specified type 
            the specified type parameter.</param>
            <returns>The converted value.</returns>
            <remarks>This method does not convert the target object or checks, if the object
            can be converted, it just not to unbox null values.</remarks>
        </member>
    </members>
</doc>
